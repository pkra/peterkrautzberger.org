<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Peter Krautzberger</title>
	<subtitle> Â· on the web</subtitle>
	<link href="https://www.peterkrautzberger.org/atom.xml" rel="self"/>
	<link href="https://www.peterkrautzberger.org/"/>
	<updated>2022-07-26T00:00:00Z</updated>
	<id>https://www.peterkrautzberger.org/</id>
	<author>
		<name>Peter Krautzberger</name>
		<email>p.krautzberger@gmail.com</email>
	</author>
	
	<entry>
		<title>Three interesting results from the AIM workshop</title>
		<link href="https://www.peterkrautzberger.org/0208/"/>
		<updated>2018-11-15T00:00:00Z</updated>
		<id>https://www.peterkrautzberger.org/0208/</id>
		<content type="html">&lt;p&gt;When I look back at &lt;a href=&quot;https://www.peterkrautzberger.org/0201/&quot;&gt;looking ahead to 2018&lt;/a&gt;, I&#39;m going to fall short of my goals for this year. Life was on full throttle this year; no regrets. But I want to at least acknowledge what an excellent adventure the &lt;a href=&quot;https://aimath.org/webmath&quot;&gt;AIM Workshop&lt;/a&gt; in May has been. So let&#39;s take a look at three interesting results.&lt;/p&gt;
&lt;h2&gt;The first rule of workshops&lt;/h2&gt;
&lt;p&gt;It&#39;s all in the people.&lt;/p&gt;
&lt;p&gt;Of course, the very best part of this workshop was the people who attended it. It&#39;s amazing to get people from NVDA, JAWS and ChromeVox into a room for a few days. It&#39;s even better when you have people from MathJax, MathLive, Desmos in the same room. It gets even better when you have publishing experts from Wiley and Pearson on board. It&#39;s incredibly much better to have the vast expertise of people such as T.V. Raman and Joanie Diggs there. But for me, the most thrilling was the educators in the room. They are the key and without them we are all lost. And I&#39;m the first to admit the workshop didn&#39;t serve them well enough. Even more importantly, at future workshops we need to get students in the room as well. Because what the hell are we doing without them.&lt;/p&gt;
&lt;p&gt;In extension, this is a compliment to AIM&#39;s workshop design. Providing funding not only for a workshop but for everyone&#39;s travel and accommodation was excellent but also crucial. We would never have been able to get all these people in a room. This is the right way to hold workshops, especially when inclusiveness is a huge issue.&lt;/p&gt;
&lt;h2&gt;Towards an optional Braille stream&lt;/h2&gt;
&lt;p&gt;There&#39;s a particular limitation of today&#39;s accessibility landscape: we cannot specify separate textual alternatives for voice and Braille.&lt;/p&gt;
&lt;p&gt;Generally, not having separate streams for voice and Braille does not seem like a huge problem. As long as all accessibility needs are covered by a fixed set of standard elements that are designed for both aural and tacticle interfaces, then assistive technologies can reliably implement a split in the stream, i.e., present separate voice and Braille streams from that. For example, if you have a dedicated button element, it can represented as a &lt;code&gt;btn&lt;/code&gt; contraction on a Braille display and voiced as &lt;em&gt;Button&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As usual, not all things can be covered by standards. Say your button is is used as a control in a game then you may want to augment the button&#39;s accessible name to include the action. So if the button opens a selection of planets to travel your to in your game, then you may want to have this voiced as &lt;em&gt;planet&lt;/em&gt;. You can do that of course and then you might get a voicing of &lt;em&gt;planet; button&lt;/em&gt; and something akin to &lt;code&gt;pln btn&lt;/code&gt; on a Braille display.&lt;/p&gt;
&lt;p&gt;Unfortunately, you might find yourself in a situation where you need to prevent the addition of &lt;em&gt;button&lt;/em&gt; in the voicing because it may be problematic for your aural users, e.g., users with learning disabilities may find it to be distracting noise. But now how do you identify the button on a Braille display?&lt;/p&gt;
&lt;p&gt;For equation layout, the situation is much like that final situation. In many countries, specialized Braille formats such as Nemeth, UEB, or Marburg have been developed to represent equation layout in Braille. These are well established and there are not too difficult to create. But they differ considerably from what you would might want to render aurally (and visually). In fact, since most precede the web, they try to capture (simplified) visual layout, including all the ambiguities we face there.&lt;/p&gt;
&lt;p&gt;For me, the greatest positive experience of the workshop was to see the group assess the problem, come to an agreement that it needs a solution, &lt;a href=&quot;https://github.com/w3c/aria/issues/765&quot;&gt;add it to the ARIA tracker&lt;/a&gt;, &lt;a href=&quot;https://sinabahram.github.io/aria-playground/CustomBrailleOutput.html&quot;&gt;build demos&lt;/a&gt; and even see NVDA whip up a first implementation that we could explore by the end of the week.&lt;/p&gt;
&lt;p&gt;This was &lt;strong&gt;huge&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;And yet, it is the easy part. Now the long road towards a proper standard with widespread implementations lies ahead.&lt;/p&gt;
&lt;h2&gt;Progress on deep aria labels&lt;/h2&gt;
&lt;p&gt;I brought my favorite problem to the workshop - &lt;a href=&quot;https://www.peterkrautzberger.org/0192/&quot;&gt;deep &lt;code&gt;aria-label&lt;/code&gt;s&lt;/a&gt; and I was not disappointed.&lt;/p&gt;
&lt;p&gt;Assistive technologies for equation layout (in particular for MathML) have to apply heuristics (read: guess) the semantics of an expression so that they can generate meaningful non-visual representations. This is a problem because heuristics that are hard coded into an external tool such as screenreaders cannot be altered by standard means, leaving authors without adequate means to ensure the quality of their content. (If a screenreader voices every superscripted 2 as &lt;em&gt;squared&lt;/em&gt; and you have no way of changing that, then you&#39;re screwed.)&lt;/p&gt;
&lt;p&gt;More importantly, since equation layout is, ultimately, only visual, a perfectly correct representation in HTML is as &lt;code&gt;span&lt;/code&gt;s, i.e., there are no semantics. Finally, ARIA (naturally) does not have a dictionary of equation layout terminology (let alone mathematical or scientific terminology) to use - a) because all past dictionary based approaches have failed and b) such a dictionary would have to be extensible (read: infinite) which ARIA, so far, does not really want to be (&lt;code&gt;role-description&lt;/code&gt; notwithstanding).&lt;/p&gt;
&lt;p&gt;So the pragmatic answer is: you&#39;ll just have to do it yourself and use deep &lt;code&gt;aria-label&lt;/code&gt;s: you override every single accessible name computation by slapping a fixed label to things. Because, ultimately, this is how we read equational content - with words.&lt;/p&gt;
&lt;p&gt;The trouble is that it&#39;s easy to add a single &lt;code&gt;aria-label&lt;/code&gt; at the root but it is hard to provide an explorable structure that provides a decent user experience. You&#39;ll want to provide labels at the leaf level but the state of ARIA prevents those from adequately building up an explorable tree. (And we&#39;re not even talking about refinements such as providing summaries and structural and positional information during exploration.)&lt;/p&gt;
&lt;p&gt;At the workshop, David Tseng from Google&#39;s ChromeVox team, Volker Sorge from Speech Rule Engine and Davide Cervone from MathJax sat down nd &lt;a href=&quot;https://github.com/zorkow/AIM-Workshop/tree/master/annotations&quot;&gt;build a first demo&lt;/a&gt; that tries two things&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;expose the semantic structure identified by Speech Rule Engine&#39;s heuristic using &lt;code&gt;aria-owns&lt;/code&gt; attribute&lt;/li&gt;
&lt;li&gt;expose (some of) the detailed speech information provided by SRE&lt;/li&gt;
&lt;li&gt;provide exploration of that tree via &lt;code&gt;aria-active-descendant&lt;/code&gt; manipulations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is, simply put, a fantastic step forward.&lt;/p&gt;
&lt;p&gt;The approach builds on existing parts of ARIA and identifies reasonable, incremental improvements to it. It raises important questions on general exploration, e.g., how is there a generic &lt;code&gt;aria-table&lt;/code&gt; walker in every screenreader but not some basic &lt;code&gt;aria-tree&lt;/code&gt; walker (such as breadth or depth first)?. And yet it pragmatically builds an unobtrusive solution anyway that works at 60FPS. It works with any markup, in particular any approach using CSS or SVG markup. And to top it off, it leverages existing open-source tool to enrich pre-existing content. And while it shows just how far ahead MathJax and Speech Rule Engine are, this approach is transparent and easily used by any other equation layout library.&lt;/p&gt;
&lt;p&gt;In terms of UX, this is also a critical step forward. The approach is should be able to provide a seamless an interaction for visual and non-visual users alike, in synchronization. Effectively, it pushes MathJax&#39;s Accessibility Extensions from client- to server-side, requiring minimal JavaScript (just a keyboard event listener) to expose the content, without live region hacks, and with a solid non-JS fallback. It provides a clear path for making even that bit of JS obsolete through natural improvements to ARIA. It opens a path to finally get rid of the horrible hackery such as JAWS did back in the day, manipulating IE&#39;s DOM to manipulate MathJax, or Texthelp is doing today by injecting JS on the client (yuck!, and also badly failing when content-security is in place).&lt;/p&gt;
&lt;p&gt;Even better, if you combine it with the previous part (exposing specialized Braille which SRE can soon produce), then this would immediately become the by far best, universal rendering of equation layout on the web: robust, high-quality, customizable, precise. And it is a solution that will only get better as standards evolve while leaving the full control with the author (with or without aid of heuristics at authoring time).&lt;/p&gt;
&lt;p&gt;I&#39;ll dig into this more some other time but admittedly, I&#39;m pretty excited.&lt;/p&gt;
&lt;h2&gt;Coda&lt;/h2&gt;
&lt;p&gt;You can find the &lt;a href=&quot;https://aimath.org/pastworkshops/webmath.html&quot;&gt;organizers&#39; report at aimath.org&lt;/a&gt; but you can take one thing away: It&#39;s looking very good for accessible equation layout on the web these days. And it will only get better.&lt;/p&gt;
&lt;p&gt;If we can continue these workshops, things will move faster for everyone. And maybe, just maybe, we can even finally move on to actual mathematics (and other STEM content) on the web.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Towards a general method for accessible content trees or: deep aria-labels for equations revisited</title>
		<link href="https://www.peterkrautzberger.org/0209/"/>
		<updated>2019-01-13T00:00:00Z</updated>
		<id>https://www.peterkrautzberger.org/0209/</id>
		<content type="html">&lt;p&gt;Oh dear, that title is a mouth full. A while ago I wrote about &lt;a href=&quot;https://www.peterkrautzberger.org/0208/&quot;&gt;two interesting results from the AIM workshop&lt;/a&gt; and I had promised to dive deeper. Well, take a deep breath.&lt;/p&gt;
&lt;h2&gt;A simple example&lt;/h2&gt;
&lt;p&gt;Here&#39;s a story. I think it was at the first web standard related event that I ever attended, the &lt;a href=&quot;https://www.w3.org/2012/08/electronic-books/&quot;&gt;W3C workshop on ebooks&lt;/a&gt; back in 2012. Someone (maybe Janina?) presented an example of an accessible SVG and I was blown away. My memory, flawed as it is, says it was the &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Ghostscript_Tiger.svg&quot;&gt;classic SVG tiger&lt;/a&gt; but it was set up in a way that demonstrated amazing exploration features, providing non-visual representations that could dive into the entirety of the graphic, starting with high-level descriptions (something like &lt;em&gt;a tiger&#39;s head&lt;/em&gt;) all the way down to detailed nuances (&lt;em&gt;left whisker, 3 of 12&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;I&#39;m prone ot get the specifics wrong so here&#39;s a different example:&lt;/p&gt;
&lt;figure&gt;
&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:House.svg#/media/File:House.svg&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/2/24/House.svg&quot; alt=&quot;clip art house&quot; width=&quot;389&quot; height=&quot;391&quot; /&gt;&lt;/a&gt;
&lt;figcaption&gt;
By &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://openclipart.org/media/people/barretr&quot;&gt;barretr&lt;/a&gt; (Open Clip Art Library) - &lt;a rel=&quot;nofollow&quot; class=&quot;external free&quot; href=&quot;http://openclipart.org/media/files/barretr/2941&quot;&gt;http://openclipart.org/media/files/barretr/2941&lt;/a&gt;, &lt;a href=&quot;http://creativecommons.org/publicdomain/zero/1.0/deed.en&quot; title=&quot;Creative Commons Zero, Public Domain Dedication&quot;&gt;CC0&lt;/a&gt;, &lt;a href=&quot;https://commons.wikimedia.org/w/index.php?curid=3454675&quot;&gt;Link&lt;/a&gt;&lt;p&gt;&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;So this is a house. How would you describe it? Maybe: &lt;em&gt;A house with a red chimney and a blue door&lt;/em&gt;? That&#39;s not bad but there&#39;s more so much more to be said about this house!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It&#39;s a drawing of the front of a house (no other part is visible)&lt;/li&gt;
&lt;li&gt;it has a dark gray, mono-pitched roof with a red chimney on the left&lt;/li&gt;
&lt;li&gt;it has a blue door with a round, dark-gray doorknob on the left&lt;/li&gt;
&lt;li&gt;it has a yellow front wall&lt;/li&gt;
&lt;li&gt;the chimney aligns with the wall&lt;/li&gt;
&lt;li&gt;some parts are drawn with gradient effects&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These descriptions could of course all be put into one very long textual representation, e.g., as a &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; or an &lt;code&gt;aria-labeledby&lt;/code&gt; construction. And that would be ok. But I find it rather limited.&lt;/p&gt;
&lt;p&gt;This is not how a human would describe things. Imagine I&#39;d ask you to describe it. You would not start with the gradient of the doorknob on the first go. I bet you are much more inclined to provide some information at first and get into more detail if whoever is asking wants to dive deeper.&lt;/p&gt;
&lt;p&gt;Sometimes, we are in the position to have more information like this on the web, too.&lt;/p&gt;
&lt;p&gt;Imagine, this house was created in an authoring environment that specializes on such drawings; it may have been drag&amp;amp;dropped using pre-fabricated components, each having detailed descriptions, integrating user changes such as shape or color modifications, and being able to generate composited descriptions, perhaps combining them using simple rule sets (maybe even author customizable rule sets).&lt;/p&gt;
&lt;p&gt;The other thing you may notice is that the house is more than the sum of its parts, i.e., a description for the house (and parts thereof) may not sufficiently be represented by stringing the descriptions of the leafs together; for example, where would the &lt;em&gt;with&lt;/em&gt; in &lt;em&gt;a roof with a chimney&lt;/em&gt; come from? For that matter, where would &lt;em&gt;house&lt;/em&gt; come from? Depending on the content and context, there may be additional connecting words or phrases, there may be details to drop or reveal. Maybe the fabric of the roof or the whether the door is locked can be deduced from visual styling given other context.&lt;/p&gt;
&lt;p&gt;If you are lucky and you have more information, then you may find yourself in a situation where you want to add differing textual representations on every level of the tree, just like you would in a real conversation, and you may want a way for users to have access to all those varying levels of representation - but not all at once as that could be overwhelming.&lt;/p&gt;
&lt;p&gt;The most important point: like all good web standards topics, this is about a general, low-level problem. (Although solving a more general problem might appeal to mathematicians, too.)&lt;/p&gt;
&lt;h2&gt;Deep aria labels on tree structures (or: it&#39;s not &lt;em&gt;just&lt;/em&gt; about equations)&lt;/h2&gt;
&lt;p&gt;So let&#39;s try to outline what this is about. Imagine you have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a complex DOM structure (e.g., an inline SVG, a complex grid structure, an equation layout thingie)&lt;/li&gt;
&lt;li&gt;which is not represented well by its leafs alone (e.g., there might be abstract components, abbreviated content, inferred meaning)&lt;/li&gt;
&lt;li&gt;that might have a semantic tree structure that does not match the DOM tree.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now imagine that you have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;appropriate textual representations for each node (e.g., aria-labels on all nodes)&lt;/li&gt;
&lt;li&gt;yet those textual representations may have notable differences between non-leafs and their descendants, i.e., a node may be more than the sum of its descendants (or less or both/neither).&lt;/li&gt;
&lt;li&gt;and you have proper aria-owns attributes all over the tree to represent the correct semantics&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;What to want&lt;/h3&gt;
&lt;p&gt;Let&#39;s start with some fairly standard observations on accessible rendering:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unified rendering&lt;/strong&gt; visual and non-visual rendering should not be apart. Textual representation should be intentional, reflect the intention of the author. (This does not contradict that both graphical and textual representation will likely be created with tools, even tools leveraging heuristics.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Progressive enhancement / graceful degradation&lt;/strong&gt; a solution should work in a way that allows to progressively enhance content. For example, a top-level textual description (e.g., using &lt;code&gt;aria-label&lt;/code&gt;) is a robust fallback. You may lose some convenience if that&#39;s all there is - and even some information - but it certainly isn&#39;t terrible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Performance&lt;/strong&gt; a solution must be performant, especially if you apply it to hundreds or thousands of content fragments.&lt;/p&gt;
&lt;p&gt;From an author&#39;s point of view, the key affordance is &lt;strong&gt;precision/control&lt;/strong&gt;. This is worth repeating: Accessibility inevitably starts with author control. If authors cannot create content in a way that they can trust to render reliably, i.e., with the precision they put into their content, then they will not care to do so.&lt;/p&gt;
&lt;p&gt;If there&#39;s no control, the platform is failing the authors. If it&#39;s failing the authors to create accessible content, then it&#39;s failing the user because they will not receive accessible content.&lt;/p&gt;
&lt;p&gt;This primarily means that content should be authorable in a way that does not require &lt;em&gt;any&lt;/em&gt; heuristics on the side of rendering (visually or non-visually). Imagine AT would have to guess how many items are in a list. Or AT would have to throw computer vision at each image to guess a description. That&#39;s ok for broken content but not acceptable for good content.&lt;/p&gt;
&lt;p&gt;There are other useful things of course - ease of authoring comes to mind. But without a solution with tangible benefits, building authoring tools or practices is never going to happen.&lt;/p&gt;
&lt;p&gt;From a screenreader user&#39;s point of view, there are more affordances that you probably don&#39;t want to ignore.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;support for reading/browse modes&lt;/li&gt;
&lt;li&gt;support for full exploration (in focus mode)&lt;/li&gt;
&lt;li&gt;seamlessly switch between exploration and reading/browse&lt;/li&gt;
&lt;li&gt;synchronization of all rendering streams
&lt;ul&gt;
&lt;li&gt;visual (highlighting), aural and tactile rendering&lt;/li&gt;
&lt;li&gt;enable customized Braille stream if specialized Braille formats exists&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many more considerations beyond this but this would be a good start.&lt;/p&gt;
&lt;h3&gt;Towards a solution: mathjax-sre-walker&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: this is not a complete solution to all of the above. But I feel like it&#39;s heading in the right direction.&lt;/p&gt;
&lt;p&gt;The codebase for this lighweight walker dubbed mathjax-sre-walker is on GitHub and for this first public summary we&#39;ve tagged &lt;a href=&quot;https://github.com/krautzource/mathjax-sre-walker/releases/tag/2.0.0&quot;&gt;v2.0.0&lt;/a&gt;. As I mentioned in &lt;a href=&quot;https://www.peterkrautzberger.org/0208&quot;&gt;208&lt;/a&gt;, this work with &lt;a href=&quot;https://www.peterkrautzberger.org/0209/www.progressiveaccess.com/&quot;&gt;Volker Sorge&lt;/a&gt; grew out of a demo that David Tseng, Volker Sorge and Davide Cervone built at the AIM workshop in San Jose last year. A simplified demo in a codepen is embedded below alongside a recording of a quick demonstration.&lt;/p&gt;
&lt;h3&gt;what users get&lt;/h3&gt;
&lt;p&gt;For the visual user, it will provide a means of visually exploring the underlying (and often hard to discern) tree structure by putting the tree in focus and using the arrow keys.&lt;/p&gt;
&lt;p&gt;For the non-visual user, it will additionally provide textual representations for each tree node, in sync with the visual representation. It doesn&#39;t but could (should we get separate &lt;a href=&quot;https://github.com/w3c/aria/issues/765&quot;&gt;Braille streams in ARIA&lt;/a&gt;) additionally provide a simultaneous rendering in specialized formats such as Nemeth or UEB, chemical Braille or others.&lt;/p&gt;
&lt;p&gt;For the screenreader user, it will provide the top-level tree node in browse mode. When the tree&#39;s top-level DOM node is voiced, the screenreader should put in focus, triggering visual highlighting; the screenreader should also indicate the tree role to imply further functionality is available.&lt;/p&gt;
&lt;p&gt;The user can switch to the screenreader&#39;s focus mode to use keyboard exploration with the arrow keys which is matched visually by the highlighting. When the user switches back to browse mode, they can continue naturally browsing to the next piece of content.&lt;/p&gt;
&lt;h3&gt;how users get it&lt;/h3&gt;
&lt;p&gt;The first, not too relevant part: the DOM tree has lots of information in &lt;code&gt;data-&lt;/code&gt; attributes and in a first step we enrich the content with a secondary structure. Getting such information is of course not easy (luckily we can already automate that for equations thanks to speech-rule-engine) and this step can be done server-side. Ultimately that&#39;s not the hardest part - domain experts can build such tools - we&#39;re using Volker&#39;s &lt;a href=&quot;https://github.com/zorkow/speech-rule-engine/&quot;&gt;speech-rule-engine&lt;/a&gt; for the equations (which is a marvel).&lt;/p&gt;
&lt;p&gt;Yet all the extra information won&#39;t help if we can&#39;t make use of it on the web platform.&lt;/p&gt;
&lt;p&gt;So how is this realized in the DOM tree? As a bunch of &lt;code&gt;aria-label&lt;/code&gt;s (to add textual representations) and &lt;code&gt;aria-owns&lt;/code&gt; to carve out the tree structure that might differ from the DOM tree; we also add a &lt;code&gt;role&lt;/code&gt; to most nodes. In particular, we immediately get a top-level &lt;code&gt;aria-label&lt;/code&gt; which serves as a fallback.&lt;/p&gt;
&lt;p&gt;Now what we&#39;re missing is some kind of AT functionality that would give us an &lt;code&gt;aria-owns&lt;/code&gt; tree walker. We have built-in table walkers in screen readers already so this does not seem like a massive stretch to imagine, especially given the evolution of the tree role so far. Sadly, we do not have general purpose tree walkers (yet).&lt;/p&gt;
&lt;p&gt;In the second part, we overcome this by adding such a walker in JS. This walker consists of a tree structure (the &lt;code&gt;aria-owns&lt;/code&gt; tree, generated from the embedded data for performance) and a keyboard listener. It is very close to the DOM&#39;s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Treewalker&quot;&gt;treewalker API&lt;/a&gt; and &lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView&quot;&gt;WCAG tree examples&lt;/a&gt;, except that we&#39;re working on the &lt;code&gt;aria-owns&lt;/code&gt; tree because that tree may have a different order/structure from the DOM. This walker is fairly minimal, probably ~100 lines of ES6 code if you strip it down to its minimum.&lt;/p&gt;
&lt;p&gt;Here&#39;s a demo of v2 or you can look at the &lt;a href=&quot;https://krautzource.github.io/mathjax-sre-walker/index.html&quot;&gt;one in the repository&lt;/a&gt;.&lt;/p&gt;
&lt;p data-height=&quot;896&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;EGOZxm&quot; data-default-tab=&quot;result&quot; data-user=&quot;pkra&quot; data-pen-title=&quot;mathjax-sre-walker v2 demo&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/pkra/pen/EGOZxm/&quot;&gt;mathjax-sre-walker v2 demo&lt;/a&gt; by Peter Krautzberger (&lt;a href=&quot;https://codepen.io/pkra&quot;&gt;@pkra&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;h3&gt;role role role your boat, gently down the stream&lt;/h3&gt;
&lt;p&gt;A side note on the chosen &lt;code&gt;role&lt;/code&gt; attributes. The tree role and its related roles may appear a good fit but they have been developed for specific application-like interfaces. It might be that it&#39;s smarter to use something different here, I honestly don&#39;t know.&lt;/p&gt;
&lt;p&gt;Besides possibly being the right roles, they are also supported well across the accessibility tool chain, i.e., they happen to get the effects we&#39;d like to see.&lt;/p&gt;
&lt;p&gt;What are those effects?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a top-level &lt;code&gt;aria-label&lt;/code&gt; to provide a default textual representation, especially in browse mode&lt;/li&gt;
&lt;li&gt;deeply nested &lt;code&gt;aria-labels&lt;/code&gt; with the role &lt;code&gt;treeitem&lt;/code&gt; provide detailed textual representation of all relevant nodes in exploration in focus mode&lt;/li&gt;
&lt;li&gt;browse mode puts element in focus on-the-go which makes for good UX: just drop out of browse mode when you hear an equation to start exploring&lt;/li&gt;
&lt;li&gt;switching back to browse mode continues smoothly&lt;/li&gt;
&lt;li&gt;&lt;code&gt;active-descendant&lt;/code&gt; is used to move the the focus on the accessibility tree&lt;/li&gt;
&lt;li&gt;thereby exposing the nested labels instead of the top-level node&#39;s label&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other roles have too many negative side effects in practice. Perhaps they shouldn&#39;t but it&#39;s often too hard to dissect if a problem comes from the ARIA specs, browser implementations, OS APIs, or screenreaders.  For example, some approaches didn&#39;t work well on MathJax SVG output but worked well on the clip art house; this is probably due to &lt;code&gt;use&lt;/code&gt; elements.&lt;/p&gt;
&lt;p&gt;Some other roles we&#39;ve tested across screenreaders:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;img&lt;/code&gt; (nested) prevents exploration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;application&lt;/code&gt; loses the top level label when using browse mode and it is difficult to get back to browse mode after exploration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;group&lt;/code&gt; is similar to application (except easier to get back into browse mode) but works poorly with CSS rendering&lt;/li&gt;
&lt;li&gt;&lt;code&gt;button&lt;/code&gt; and &lt;code&gt;math&lt;/code&gt; mostly work the same as &lt;code&gt;tree&lt;/code&gt; (very wrong, but hey)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Maybe those issues are fixable or maybe just due to my lack of understanding of specs and implementations. Of course, the mythical &lt;code&gt;role=static&lt;/code&gt; (&lt;code&gt;text&lt;/code&gt; etc.) might be very appropriate but, alas, it doesn&#39;t exist.&lt;/p&gt;
&lt;p&gt;Personally, I don&#39;t care which role I use. Whatever role works, I&#39;m happy to use it. Tree seems both adequate and semantically fitting, and they have a history of steady improvement.&lt;/p&gt;
&lt;h2&gt;In real life&lt;/h2&gt;
&lt;p&gt;Below is a recording with NVDA and Chrome on Windows 10.&lt;/p&gt;
&lt;div style=&quot;display: flex&quot;&gt;
&lt;iframe width=&quot;720&quot; height=&quot;748&quot; src=&quot;https://www.youtube.com/embed/LWho3euldjM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; style=&quot;flex-grow: 1&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;Overall, this works well on Firefox and Chrome while Edge and Safari generally don&#39;t get your more than the top-level label, i.e., the fallback; I haven&#39;t taken the time to compile for IE11 to test it.&lt;/p&gt;
&lt;p&gt;NVDA seems best so far, JAWS seems to have a problem tracking focus (it jumps away when getting back into browse mode / virtual cursor), and Orca &lt;s&gt;struggles with CSS rendering&lt;/s&gt; (see update below). VoiceOver with Safari is doing its thing (treating everything as a group) but VO works well with Chrome on MacOS. On iOS and Android we get the top-level labels (except VO with CSS rendering for some reason). The current code lacks touch input because (as far as I know) neither Talkback nor VoiceOver have a way to switch into (some form of) focus mode; it could be added, perhaps the visual exploration is interesting enough. I&#39;ll be publishing more demo runs as we move along.&lt;/p&gt;
&lt;p&gt;Overall, I&#39;m excited about the robustness at this stage and I plan to use this at work soon(ish). I also hope to bring the discussion around standardization of tree walkers to the ARIA Working Group - it seems to align with the evolution of tree widgets (e.g., for tab focus management, positional information) and a lot of content could benefit from some defaults in AT (much like with table walkers). But first we really need separate Braille streams.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;update 2019-01-24&lt;/strong&gt; Joanmarie Diggs was kind enough to look into the issues with CSS layout (commits &lt;a href=&quot;https://gitlab.gnome.org/GNOME/orca/commit/9357aa9cd82f43a853704b98464eb7a76352d4ed&quot;&gt;9357aa9c&lt;/a&gt; and &lt;a href=&quot;https://gitlab.gnome.org/GNOME/orca/commit/87d78dad097ce11a359e3bbebd77f5d32b2fccd6&quot;&gt;87d78dad&lt;/a&gt;) and Orca now matches NVDA beautifully.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Carnival of Math No. 173</title>
		<link href="https://www.peterkrautzberger.org/0210/"/>
		<updated>2019-09-12T00:00:00Z</updated>
		<id>https://www.peterkrautzberger.org/0210/</id>
		<content type="html">&lt;p&gt;This year I &lt;a href=&quot;https://www.peterkrautzberger.org/0194/&quot;&gt;once again&lt;/a&gt; have the pleasure to host the now &lt;strong&gt;173th Carnival of Mathematics&lt;/strong&gt;, the moveable feast of mathematical blogging shepherded by &lt;a href=&quot;http://aperiodical.com/carnival-of-mathematics/&quot;&gt;The Aperiodical&lt;/a&gt;, the best math blogging collective on this little blue ball in space. Be sure to &lt;a href=&quot;https://leeyieng.wordpress.com/2019/08/04/carnival-of-mathematics-172/&quot;&gt;visit the previous Carnival (No. 172) at Cassandra Lee Yieng&#39;s blog&lt;/a&gt; and keep an eye on &lt;a href=&quot;https://aperiodical.com/carnival-of-mathematics/&quot;&gt;all Carnivals&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As tradition will have it, we begin our show by taking a closer look at our number.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;173&lt;/strong&gt; is not just a prime, the sum of two squares of primes (2Â²+13Â²) &lt;em&gt;and&lt;/em&gt; the sum of three primes (53+59+61). No, it is also a &lt;a href=&quot;https://en.wikipedia.org/wiki/Balanced_prime&quot;&gt;balanced prime&lt;/a&gt; (same gap to previous and following prime) and the 13&lt;sup&gt;th&lt;/sup&gt;(!) &lt;a href=&quot;https://en.wikipedia.org/wiki/Sophie_Germain_prime&quot;&gt;Sopie Germain prime&lt;/a&gt; (since 2Ã173+1=347 is also prime).&lt;/p&gt;
&lt;figure&gt;
&lt;img width=&quot;256&quot; style=&quot;margin: 0 auto;&quot; alt=&quot;Sophie Germain&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/8/8b/Germain.jpeg&quot; /&gt;
&lt;figcaption&gt;Portrait of &lt;a href=&quot;https://en.wikipedia.org/wiki/Sophie_Germain&quot;&gt;Sophie Germain&lt;/a&gt; (April 1, 1776 - June 27, 1831), &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Germain.jpeg&quot;&gt;[Public domain], via Wikimedia Commons&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Alas, 173 is also an &lt;a href=&quot;https://en.wikipedia.org/wiki/Odious_number&quot;&gt;odious number&lt;/a&gt;, which may sound rather bad but just means it has an odd number of 1&#39;s in binary (10101101).&lt;/p&gt;
&lt;p&gt;Now that you&#39;ve warmed up, let us once again enter the decidely wonderful, balanced madness of the mathematical blogging carnival.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Likely most people (or at least the most people) will already have seen the NYT&#39;s Kenneth Chang looking into &lt;a href=&quot;https://www.nytimes.com/2019/08/06/science/math-equation-pemdas.html&quot;&gt;Why Mathematicians hate that viral equation&lt;/a&gt;; but really who needs 8Ã·2(2+2) when you can so easily have drama with the Oxford Comma.&lt;/p&gt;
&lt;p&gt;In any case, make sure you head over to Over at the Art of Research where Vi Hart shared &lt;a href=&quot;https://theartofresearch.org/computation-for-hands-systems-for-humans/&quot;&gt;Computation for Hands, Systems for Humans&lt;/a&gt;, taking you on the magic carpet ride that&#39;s Vi&#39;s hands &amp;quot;craving computation&amp;quot;, combining hardware, software, systems thinking, VR and a ton of other ideas.&lt;/p&gt;
&lt;p&gt;Before you continue to Ari Rubinsztejn explains &lt;a href=&quot;https://gereshes.com/2019/05/27/why-tracking-space-debris-is-so-hard/&quot;&gt;Why Tracking Space Debris is so Hard&lt;/a&gt; (thanks, nonlinear dynamics!), step under the cover of the Undercover economist Tim Harford who wrote on &lt;a href=&quot;http://timharford.com/2019/08/the-strange-power-of-the-idea-of-average/&quot;&gt;the strange power of the idea of average&lt;/a&gt;, both good and bad.&lt;/p&gt;
&lt;p&gt;Of course any mathematically topic is worth a deep dive into, so head into the magical depths of the Math Vault for an extensive article on &lt;a href=&quot;https://mathvault.ca/long-division/&quot;&gt;Long Division and Its Variants (for Integers)&lt;/a&gt; Once you&#39;re ready, jump out and get yourself back into Cantor&#39;s Paradise where JÃ¸rgen Veisdal will let you in on &lt;a href=&quot;https://medium.com/cantors-paradise/the-mathematics-of-elo-ratings-b6bfc9ca1dba&quot;&gt;the mathematics of Elo ratings&lt;/a&gt;, a glimpse at the history of the famous ranking system.&lt;/p&gt;
&lt;p&gt;Before you lose your king or queen, let Richard Elwes ask you a question befit Carol&#39;s Red Queen: &lt;a href=&quot;https://richardelwes.co.uk/2019/09/06/how-many-sides-does-a-circle-have/&quot;&gt;How Many Sides Does A Circle Have?&lt;/a&gt; and be sure to follow him off on a tanget or two. If all those tangents twirled you around too much, switch to a classical, sold blog post by the amazing John Cook who will help you &lt;a href=&quot;https://www.johndcook.com/blog/2019/08/27/heaps-law/&quot;&gt;estimate vocabulary size with Heapsâ law&lt;/a&gt; just in case you need to verify a post-humously discovered manuscript by Jane Austen.&lt;/p&gt;
&lt;p&gt;To ease your way out of those particular mazes, take a sip and mingle over at &lt;a href=&quot;https://ima.org.uk/12133/editorial-august-2019/&quot;&gt;this month&#39;s IMA editorial&lt;/a&gt;, if only to catch up on the Queenâs Birthday Honours List for 2019. And if you are one of those people who frequent the always dramatic birdsite, here are a two math-focused threads for you:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Oh no, I&amp;#39;ve deliberately obscured large portions of this ruler and I need to make sure these vegetables are whole numbers of inches long or my toddler will eat me instead: a &lt;a href=&quot;https://twitter.com/hashtag/RealWorldMaths?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#RealWorldMaths&lt;/a&gt; thread &lt;a href=&quot;https://t.co/GWuZMry6Ti&quot;&gt;pic.twitter.com/GWuZMry6Ti&lt;/a&gt;&lt;/p&gt;&amp;mdash; Christian Lawson-Perfect (@christianp) &lt;a href=&quot;https://twitter.com/christianp/status/1169651584416079872?ref_src=twsrc%5Etfw&quot;&gt;September 5, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Unpopular take: As someone with a Master&amp;#39;s degree in statistics and who teaches data science, I&amp;#39;m very much over the &amp;quot;data scientists are incompetent fools who just throw data in and get results from a computer with no critical thinking&amp;quot; takes. 1/&lt;/p&gt;&amp;mdash; Matt Brems (@matthewbrems) &lt;a href=&quot;https://twitter.com/matthewbrems/status/1163224585644511233?ref_src=twsrc%5Etfw&quot;&gt;August 18, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/mathyawp/status/1162462128441139201?s=19&quot;&gt;Also via twitter&lt;/a&gt;, Francis Su shared his handout with &lt;a href=&quot;https://www.math.hmc.edu/~su/math131/good-math-writing.pdf&quot;&gt;Guildelines for good mathematical writing (PDF)&lt;/a&gt; which he says you should feel free to share with your students.&lt;/p&gt;
&lt;p&gt;To wrap things up, take a carousel of math blogging perfection at Math Off The Grid where Benjamin Leis&#39;s post on &lt;a href=&quot;https://blog.mathoffthegrid.com/2019/08/cardanos-method.html&quot;&gt;Cardano&#39;s Method&lt;/a&gt; starts from a new video from Mathologer (below), picks up &lt;a href=&quot;https://twitter.com/MrHonner/status/1165417359764533248?ref_src=twsrc%5Etfw&quot;&gt;a tweet by Patrick Honner&lt;/a&gt; throws in &lt;a href=&quot;https://artofproblemsolving.com/news/aftermath/aftermath-running-a-school-for-math-lovers-with-sam-vandervelde&quot;&gt;a podcast with Sam Vandervelde&lt;/a&gt; and tops it off with a pointer to &lt;a href=&quot;https://en.wikipedia.org/wiki/Marden%27s_theorem&quot;&gt;Marden&#39;s Theorem&lt;/a&gt; to drag you into the carnival that is Wikipedia&#39;s mathematics articles.&lt;/p&gt;
&lt;style&gt;.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }&lt;/style&gt;&lt;div class=&quot;embed-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/QILiHiTD3uc&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;p&gt;Thatâs it for the beautiful month of September. Thanks to everyone who submitted a post! After almost 9 years of running&lt;/p&gt;
&lt;p&gt;Be sure to stop by next monthâs Carnival. You should &lt;a href=&quot;http://aperiodical.com/carnival-of-mathematics/&quot;&gt;submit your favorite blog posts/videos/content&lt;/a&gt; from the month of September. If youâd like to host an upcoming show, please get in touch with &lt;a href=&quot;mailto:katie@aperiodical.com&quot;&gt;Katie&lt;/a&gt;.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Weeknote 2019/37</title>
		<link href="https://www.peterkrautzberger.org/0211/"/>
		<updated>2019-09-14T00:00:00Z</updated>
		<id>https://www.peterkrautzberger.org/0211/</id>
		<content type="html">&lt;p&gt;I&#39;ve fallen silent this year. There were a lot of reasons for that. Mostly bad things, but many good things, too. I want to try to find a way back to writing, especially given this blog&#39;s 10&lt;sup&gt;th&lt;/sup&gt; anniversary coming up in December. I&#39;ve never been very personal on this personal site of mine; or perhaps more precisely I may not have appeared to be so, that is, I&#39;ve not been writing the stuff most people think of when they say &amp;quot;personal website&amp;quot;. I&#39;m thinking maybe I&#39;ll give it a try.&lt;/p&gt;
&lt;p&gt;Anyway. I really like this idea of a weeknote which I first saw at &lt;a href=&quot;https://daverupert.com/&quot;&gt;Dave Rupert&#39;s&lt;/a&gt; and then at &lt;a href=&quot;https://www.baldurbjarnason.com/&quot;&gt;Baldur Bjarnason&#39;s&lt;/a&gt;. Let&#39;s give it a try and see how it feels.&lt;/p&gt;
&lt;h2&gt;Work&lt;/h2&gt;
&lt;p&gt;Work has been mixed this week. A big chunk of in-depth work was finalizing (what feels like a countless number of) tests for a very old piece of code that never had any tests. As this code had grown into a little bit of a monster, I now feel much more in control of it and ready to rewrite/port it. I also got into the GitHub Actions beta this week which looks nice and should help automate a bunch of stuff that&#39;s being done by a much less natural GitHub app (client permitting, anyway).&lt;/p&gt;
&lt;p&gt;Oh, and I had some interesting work helping some (print) designers wrap their heads around some web thing. That was a ton of fun and maybe it will turn into more, we&#39;ll see.&lt;/p&gt;
&lt;h2&gt;Reading&lt;/h2&gt;
&lt;p&gt;I&#39;ve been having a fit of escapism and churning through Harry Dresden novels at a high pace; as re-readings go, these are still quite good. I still don&#39;t like some things but I do still like how he grew the universe, something so many fantasy series fail at. This year really has been a year of re-reading incidentally; there are worse things.&lt;/p&gt;
&lt;h2&gt;Life&lt;/h2&gt;
&lt;p&gt;I had the yearly meeting of our daycare (which is set up as an association run by the parents). I&#39;m the data privacy person for another year which has really been quite interesting (thanks, GDPR); after focusing on the digital side (where I&#39;m more comfortable), it&#39;s time to focus on the physical side, where I look forward to learning a few new things. Otherwise, I was amazed how little drama we had; in the end, we seem to be good people, wanting to make things better.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://scoskey.org/&quot;&gt;Sam&lt;/a&gt; and I are back to regular meetings after a long summer which is just plain good. Besides good times, we are working on upgrades to &lt;a href=&quot;http://mathblogging.org/&quot;&gt;mathblogging.org&lt;/a&gt; and &lt;a href=&quot;http://boolesrings.org/&quot;&gt;boolesrings.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also think it may be time to finally fix my laptop&#39;s keyboard. First the left ctrl key went (which was fun to relearn with the right ctrl key), then the tick and some numbers started to become iffy (which gets annoying) but with the letter E starting to act up I&#39;m really coming to the end of the line. I don&#39;t know why I keep dragging it out. Let&#39;s see if I have an update in the next note, shall we?&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Weeknote 2019/38</title>
		<link href="https://www.peterkrautzberger.org/0212/"/>
		<updated>2019-09-21T00:00:00Z</updated>
		<id>https://www.peterkrautzberger.org/0212/</id>
		<content type="html">&lt;p&gt;Let&#39;s see if I can &lt;a href=&quot;https://www.peterkrautzberger.org/0211&quot;&gt;keep this up&lt;/a&gt;. I have a feeling these posts could be a collection of all the small bits and pieces that do not warrant a blog post.&lt;/p&gt;
&lt;h2&gt;Work&lt;/h2&gt;
&lt;p&gt;Work was full of organizational stuff - everything from reorganizing git repos to organizing people to organizing reporting data. So in many ways uneventful but for me usually a form of complementary exercise which gives me a productivity boost once all the end-of-quarter shenanigans are over.&lt;/p&gt;
&lt;h2&gt;Media&lt;/h2&gt;
&lt;p&gt;I&#39;ve been thinking about my media usage recently, in particular the role of podcasts and video hosting platforms (ok, mostly youtube at the moment).&lt;/p&gt;
&lt;p&gt;For the past two decades, the internet gradually eliminated any need (of mine) for TV consumption. Besides the obvious (there&#39;s a ton of media with a single subscription to a streaming service, a ton more with multiple subscriptions, and virtually all media in gray areas), I was pondering &amp;quot;TV programming&amp;quot; recently. It&#39;s something that many friends still describe as pleasing (switch on the TV and just watch something) and I would usually argue against it which seems odd since I was fairly addicted to it as a kid/ya. But recently I noticed how similar subscriptions to YouTube channels work. This is especially impressive with more original work such as &lt;a href=&quot;https://de.wikipedia.org/wiki/Druck_(Webserie)&quot;&gt;Druck&lt;/a&gt;, the German version of &lt;a href=&quot;https://de.wikipedia.org/wiki/Skam_(Fernsehserie)&quot;&gt;Skam&lt;/a&gt;, which timestamps its episodes and releases them on matching times of day. Reading about their approach (and watching a season, which was quite interesting in itself and as a parent) made me realize how I use my YouTube subscriptions like TV programming. It&#39;s ephemeral, passing me by, tuning in, maybe hopping to the next one. And yet it&#39;s way better than even tivo-era TV as it gives both the ephemeral and the archival.&lt;/p&gt;
&lt;p&gt;Similarly, podcasts (and again to some degree YouTube) have done much of the same for my radio consumption. Serious news stations like Deutschlandfunk, BBC 4, and various forms of NPR have been in my life since forever, and yet their consumption has been reduced to morning news and otherwise podcasts. In addition, podcasting covers anything from web industry to fiction, from comedy to whatever &lt;a href=&quot;https://blog.richter.fm/category/podcast/derweisheit&quot;&gt;Der Weisheit&lt;/a&gt; is (basically 4 friends chatting). I struggled to find interesting music podcasts (as in: playing contemporary popular music) for a while but I eventually found a few I liked; YouTube music channels do the rest.&lt;/p&gt;
&lt;p&gt;Anyhoo, just a reminder that this internet is wonderful, I guess.&lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;p&gt;I thought one way to use this format might be to just browse through Mastodon and see what I find (boosted or, gasp, original content). So here we go.&lt;/p&gt;
&lt;p&gt;Christian posted lovely 3D printable Láµ norm balls thing:&lt;/p&gt;
&lt;iframe src=&quot;https://mathstodon.xyz/@christianp/102807944228401858/embed&quot; class=&quot;mastodon-embed&quot; style=&quot;max-width: 100%; border: 0&quot; width=&quot;400&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;https://mathstodon.xyz/@christianp/102807949209412600/embed&quot; class=&quot;mastodon-embed&quot; style=&quot;max-width: 100%; border: 0&quot; width=&quot;400&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;David Eppstein linked to a glorious collection of Turing Complete things.&lt;/p&gt;
&lt;iframe src=&quot;https://mathstodon.xyz/@11011110/102789724968251958/embed&quot; class=&quot;mastodon-embed&quot; style=&quot;max-width: 100%; border: 0&quot; width=&quot;400&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&lt;/iframe&gt;
&lt;script src=&quot;https://mathstodon.xyz/embed.js&quot; async=&quot;async&quot;&gt;&lt;/script&gt;
&lt;h2&gt;Life&lt;/h2&gt;
&lt;p&gt;We finally went to &lt;a href=&quot;https://fridaysforfuture.de/allefuersklima/&quot;&gt;fridays for future&lt;/a&gt; this week; the fucking least we can all do is to show up whenever we can and always support them.&lt;/p&gt;
&lt;p&gt;Oh, my keyboard; I wanted to get onto that, didn&#39;t I.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Using grid to split a table cell</title>
		<link href="https://www.peterkrautzberger.org/0213/"/>
		<updated>2019-12-31T00:00:00Z</updated>
		<id>https://www.peterkrautzberger.org/0213/</id>
		<content type="html">&lt;p&gt;Well that kind of a break sucked.&lt;/p&gt;
&lt;p&gt;The other day I got to think about a little problem: split table cells.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.peterkrautzberger.org/assets/2019/splitcell.png&quot; alt=&quot;a table with first cell containing column and header information, separated by a diagonal line&quot; /&gt;
&lt;figcaption&gt;Source &lt;a href=&quot;https://tex.stackexchange.com/q/89745&quot;&gt;tex.SE&lt;/a&gt;, CC-by-SA 4.0 &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If you search around the web for CSS solutions,&lt;br /&gt;
you&#39;ll mostly find more or less fiddly ones: &lt;a href=&quot;https://stackoverflow.com/questions/45506550/how-can-a-split-diagonally-a-table-header-cell&quot;&gt;this one from StackOverflow&lt;/a&gt; hacks a border by transforming it - awesome hackery. I also liked &lt;a href=&quot;https://en.wikipedia.org/wiki/Template:Diagonal_split_header&quot;&gt;Wikipedia&#39;s solution&lt;/a&gt;, which takes a standard strike-through using gradients and automatically calculates the specific values for margins to keep the &amp;quot;sub cells&amp;quot; from the diagonal.&lt;/p&gt;
&lt;p&gt;But I was thinking that we should be able to do better these days. Shouldn&#39;t we get to stop worrying about the dimensions of the content?&lt;/p&gt;
&lt;p&gt;Grid to the rescue.&lt;/p&gt;
&lt;style style=&quot;display: block; white-space: pre-wrap; margin-bottom: 1em;&quot;&gt;
.cell {
  display: grid;
  width: max-content;
  justify-content: space-between;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: 1fr;
  border: 1px solid #000;
  background: url(&quot;data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; version=&#39;1.1&#39; preserveAspectRatio=&#39;none&#39; viewBox=&#39;0 0 100 100&#39;&gt;&lt;line x1=&#39;0&#39; y1=&#39;0&#39; x2=&#39;100&#39; y2=&#39;100&#39; stroke=&#39;black&#39; vector-effect=&#39;non-scaling-stroke&#39;/&gt;&lt;/svg&gt;&quot;);
  background-size: 100% 100%;
  margin-bottom: 1rem;
}

.cell--topRight {
  grid-column-start: 2;
  text-align: right;
}

.cell--bottomLeft {
  grid-column-start: 1;
}
&lt;/style&gt;
&lt;div class=&quot;cell diag&quot; contenteditable=&quot;true&quot;&gt;
    &lt;div class=&quot;cell--topRight&quot;&gt;Top and Right&lt;/div&gt;
    &lt;div class=&quot;cell--bottomLeft&quot;&gt;Bottom and Left&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A simple 2x2 grid an inlined background SVG to draw the diagonal; column placement creates faux cells alongside auto-rows at 1fr ensure we don&#39;t cross the line. In other words, an (almost) content-agnostic split table cell.&lt;/p&gt;
&lt;p&gt;You can go ahead and edit the text to try it out. See if you can find some edge cases where it fails (and let me know if you find a real case).&lt;/p&gt;
&lt;p&gt;And in real life don&#39;t forget to add some non-visual hints to clarify which part is which, especially in a table head.&lt;/p&gt;
&lt;p&gt;Happy New Year.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Tech update</title>
		<link href="https://www.peterkrautzberger.org/0214/"/>
		<updated>2020-10-07T00:00:00Z</updated>
		<id>https://www.peterkrautzberger.org/0214/</id>
		<content type="html">&lt;p&gt;This site is nearing its 11th anniversary and the past year has not been kind to my writing around here. I can&#39;t even say there are a lot of drafts or some such, just a lot of emptiness after lots of hours in ICU waiting rooms and then straight into covid19.&lt;/p&gt;
&lt;p&gt;I&#39;ve been trying to get back to writing here and as these things tend to go, it took spare time over a few months to upgrade the underlying tech instead. A large part of this was playing around with MathJax, which migh seem somewhat silly since I don&#39;t write mathematics much anymore. However, I use MathJax a lot for work and it was time to implement a few things I had wanted to dogfood.&lt;/p&gt;
&lt;h2&gt;The basics&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/pkra/peterkrautzberger.org/commit/dad56ad9e9e8efd21486cd4345a7a6b652f48c1c&quot;&gt;Two years ago&lt;/a&gt;, I switched from &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; (to which I had at some point added a &lt;a href=&quot;https://github.com/pkra/peterkrautzberger.org/commit/2be9697f9fc4900da285eac705e5cca1785ccac9&quot;&gt;travis build&lt;/a&gt; to run &lt;a href=&quot;https://github.com/mathjax/MathJax-node&quot;&gt;mathjax-node&lt;/a&gt;) to &lt;a href=&quot;https://github.com/11ty/eleventy&quot;&gt;eleventy&lt;/a&gt;. The primary reason was that I wanted more control over my build and since I work primarily with (vanilla) JavaScript, eleventy was (and continues to be) a very good choice. But I didn&#39;t find time to work out a proper integration of mathjax-node so I went back to client-side MathJax (naturally with its accessibility extension active by default).&lt;/p&gt;
&lt;p&gt;So obviously I upgraded eleventy which went as smooth as can be - just some minor plugin changes.&lt;/p&gt;
&lt;h2&gt;the new stuff&lt;/h2&gt;
&lt;p&gt;The step back to client-side MathJax was supposed to get me two steps forward towards testing my new tech here. But shit hit the fan and here we are two years later.&lt;/p&gt;
&lt;p&gt;Since &lt;a href=&quot;https://www.peterkrautzberger.org/0209/&quot;&gt;my last significant piece of writing around here&lt;/a&gt;, I&#39;ve been continuing to work on accessible and explorable server-side MathJax rendering (and beyond that more generally &amp;quot;complex&amp;quot; content). I favor MathJax&#39;s SVG output for both technical and philosophical reasons but a key problem for the (now retired) &lt;a href=&quot;https://github.com/krautzource/mathjax-sre-walker/&quot;&gt;mathjax-sre-walker&lt;/a&gt; had been that MathJax v2 dropped some internal structure in its SVG output (to get smaller SVGs), which in particular meant that any table construction failed to become explorable.&lt;/p&gt;
&lt;p&gt;So really rolling out these exploration ideas meant upgrading to MathJax v3 - which was a bit of a pain, to be honest. I have many (many) feelings about MathJax v3 and should do a post on it at some point. But for now let&#39;s just say that I ran into many small bugs, some fixed but not released, others not yet fixed when I found them. All in all, maybe a dozen bugs that just dragged things out.&lt;/p&gt;
&lt;p&gt;At the same time, my exploration tooling continued to evolve and mathjax-sre-walker has now been retired in favor of &lt;a href=&quot;https://github.com/krautzource/aria-tree-walker&quot;&gt;aria-tree-walker&lt;/a&gt; as well as &lt;a href=&quot;https://github.com/krautzource/sre-to-tree/&quot;&gt;sre-to-tree&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aria-tree-walker is a tiny (&amp;lt;1kb zipped) walker for ARIA trees with a fairly specific markup structure: the tree is marked up via aria-owns and each tree item is named by an aria-label. Sre-to-tree translates SRE&#39;s structural information to just such a suitable tree. Rolling out the walker led to me finding several minor bugs found in &lt;a href=&quot;https://github.com/zorkow/speech-rule-engine/&quot;&gt;speech-rule-engine&lt;/a&gt;, thus more delay. (But don&#39;t get me wrong, Davide and Volker have been super responsive as always when it came to these bugs.)&lt;/p&gt;
&lt;p&gt;So 3-4 moving pieces for equations, lots of bugs, lots of growing pains. Fun stuff really and the main point why I wanted to test these technologies here.&lt;/p&gt;
&lt;h2&gt;markdown&lt;/h2&gt;
&lt;p&gt;The third part was to integrate these moving pieces back into eleventy. Fortunately, I found an existing markdown+mathjax plugin that was designed to not just ignore TeX content but render it server-side. Unfortunately, &lt;a href=&quot;https://github.com/tani/markdown-it-mathjax3&quot;&gt;markdown-it-mathjax3&lt;/a&gt; wasn&#39;t quite flexible enough to let me do my thing. But it helped me solve a major problem: hooking into markdown(-it) processing. So &lt;a href=&quot;https://github.com/pkra/peterkrautzberger.org/blob/e30b9db2761482b57fc9c6f414d41f331bcdd05d/markdown-it-mathjax3-hacked.js&quot;&gt;I forked it&lt;/a&gt; to hook into &lt;a href=&quot;https://github.com/pkra/peterkrautzberger.org/blob/e30b9db2761482b57fc9c6f414d41f331bcdd05d/tex2svg-tree.js&quot;&gt;my custom MathJax v3 setup&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As a side effect, a ton of markdown content broke because markdown-it-mathjax follows pandoc&#39;s TeX-in-markdown rules and my old writing didn&#39;t adhere to that. Which took me through a fun romp of my content, &lt;a href=&quot;https://github.com/pkra/peterkrautzberger.org/commit/f3a73f7c713610938a07fc11faaa04229294895c&quot;&gt;fixing lots of stuff&lt;/a&gt;, including more errors from previous rewrites (embarassing) and also bugs in the tooling (awesome). Some posts hold up rather well, others not so much; I should maybe write about that some time (ahaha, listen to yourself, man).&lt;/p&gt;
&lt;p&gt;Finally, some CSS and JS updates were in order: adding the aria-tree-walker when necessary and styling the exploration - which led to yet more bug reports (yay). After &lt;a href=&quot;https://mathstodon.xyz/@pkra/104970592018504650&quot;&gt;teasing myself on mathstodon&lt;/a&gt; I was finally ready to push it out last week. In the end, the setup isn&#39;t the most efficient but it&#39;s ok for now; a 1 min build time is bareable and yet probably enough pressure to optimize later.&lt;/p&gt;
&lt;h2&gt;Coda&lt;/h2&gt;
&lt;p&gt;No next steps as life gets in the way too much these days. Ping me if you have any questions on the setup. For good measure, here&#39;s an equation which should - final piece - also render in the atom/rss feed (though exploration will probably fail as most feed readers won&#39;t run JavaScript). &lt;a href=&quot;https://krautzource.github.io/aria-tree-walker/&quot;&gt;As described in the aria-tree-walker docs&lt;/a&gt; AT users will get the full text in browse mode but can switch to focus mode to explore with arrow keys; visual users can focus the equation (e.g., tab to it or left-click it) and then explore.&lt;/p&gt;
&lt;tex-block&gt;\operatorname{FS}(x_i)_{i\in \omega} = \left\{ \sum_{k \in s} x_k | s \subseteq_f \omega \right\}
&lt;/tex-block&gt;</content>
	</entry>
	
	<entry>
		<title>A MathJax extension for specifying the accessible name</title>
		<link href="https://www.peterkrautzberger.org/0215/"/>
		<updated>2020-10-12T00:00:00Z</updated>
		<id>https://www.peterkrautzberger.org/0215/</id>
		<content type="html">&lt;p&gt;Look at me writing two posts in a year! October is World Blindness Awareness Month, so let&#39;s solve one of the critical missing pieces for accessible equation rendering on the web! Am I exaggerating? Only a little.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.peterkrautzberger.org/0214/&quot;&gt;Previously&lt;/a&gt;, I had mentioned an update on my work on the &lt;a href=&quot;https://github.com/krautzource/aria-tree-walker&quot;&gt;aria-tree walker&lt;/a&gt; (formerly known as &lt;a href=&quot;https://github.com/krautzource/mathjax-sre-walker/&quot;&gt;mathjax-sre-walker&lt;/a&gt;, see also &lt;a href=&quot;https://www.peterkrautzberger.org/0209/&quot;&gt;No. 209&lt;/a&gt;). While a longer piece on this may be warranted, let me focus on a closely related issue - fixing accessible names when necessary, a problem the walker solves in part.&lt;/p&gt;
&lt;h2&gt;Fantastic heuristics...&lt;/h2&gt;
&lt;p&gt;While heuristics can be useful (e.g., user agents dealing with invalid markup or Chrome&#39;s machine-learning-based image descriptions), it is always better to avoid them. Nobody likes a guessing game. This gets tricky however with content that cannot work without heuristics, e.g., equations.&lt;/p&gt;
&lt;p&gt;To quote myself, equations are &lt;a href=&quot;https://www.peterkrautzberger.org/0196/&quot;&gt;simply pretty terrible all around&lt;/a&gt; and not at all accessible (in the sense of web accessibility). So far, the best you can do is to use &lt;a href=&quot;http://docs.mathjax.org/en/latest/basic/a11y-extensions.html&quot;&gt;MathJax&#39;s accessibility extensions&lt;/a&gt; to leverage the incredible heuristics provided by &lt;a href=&quot;https://github.com/zorkow/speech-rule-engine/&quot;&gt;Speech Rule Engine&lt;/a&gt;. All solutions around equations require heuristics and this is the best tool available.&lt;/p&gt;
&lt;p&gt;And yet even with the best heuristics your content will still suck &lt;a href=&quot;https://hyperboleandahalf.blogspot.com/2010/04/alot-is-better-than-you-at-everything.html&quot;&gt;alot&lt;/a&gt;. Why? Because heuristics inevitably hit their limits and provide poor results in edge cases (and how quickly that happens is usually outside your control). Your advantage is that you have least &lt;em&gt;something&lt;/em&gt; as opposed to nothing when a dictionary-based approach fails.&lt;/p&gt;
&lt;p&gt;So what to do? If you cannot avoid heuristics, then the next best thing is to apply heuristics-based tools server-side; client-side heuristics should always be a last resort. Besides the obvious perks, you end up with a static bit of content that you &lt;strong&gt;can&lt;/strong&gt; fix if necessary. Coming back to the aria-tree-walker, if you look at any of the examples in its docs and are unhappy with the accessible name of some part, you can simply edit it. Then it&#39;s fixed. That&#39;s a huge step forward. And yet.&lt;/p&gt;
&lt;h2&gt;... and where to fight them&lt;/h2&gt;
&lt;p&gt;Fixing accessibility issues can be hard. Even the best content might turn out to not work as expected or be facing an insurmountable bug somewhere along the way to the user, forcing you to work around things. Ideally, you can apply a fix at the source but often fixes in post-production are the only way. If your content requires heuristics, you now have two problems: you need a fix and you need to override the heuristics to prevent them from ignoring your fix. That&#39;s a lot to ask.&lt;/p&gt;
&lt;p&gt;For Speech Rule Engine (and thus MathJax), this problem now has a first solution: my &lt;a href=&quot;https://github.com/zorkow/speech-rule-engine/issues/157&quot;&gt;feature request from 2017&lt;/a&gt; has been implemented and we now have support for aria-label. This means you can override the accessible name at the source and Speech Rule Engine will honor it. Even better, this can give you the best of both worlds: if you label a non-atomic expression, users will still be able to dive in and explore the heuristics-based version. That&#39;s in fact, nothing new - if you explore something labeled &lt;q&gt;x squared&lt;/q&gt; you might come up against &lt;q&gt;exponent 2&lt;/q&gt; - but it&#39;s worth repeating as it is incredibly powerful for users.&lt;/p&gt;
&lt;h2&gt;At the source&lt;/h2&gt;
&lt;p&gt;Of course, having some internal markup facility makes things a bit more difficult for authors. Most likely they use better formats than MathML to feed into SRE&#39;s heuristics. If we cannot give authors control at the source (no, not &lt;a href=&quot;https://matrix.fandom.com/wiki/The_Source&quot;&gt;that source&lt;/a&gt;), we can never hold them accountable. So let&#39;s solve this for MathJax&#39;s TeX input.&lt;/p&gt;
&lt;p&gt;The repository &lt;a href=&quot;https://github.com/krautzource/mathjax-aria-label/&quot;&gt;mathjax-aria-label&lt;/a&gt; hosts a MathJax v3 extension for the TeX input providing a simple macro: &lt;code&gt;\arialabel{}{}&lt;/code&gt;. The macro takes two arguments: the first argument becomes the value of the aria-label attribute on a wrapper around whatever the second argument becomes. This macro is of course most useful when used in other macros, either with a fixed name or with a constructed name (e.g., a small caps macro could do something like &lt;code&gt;\arialabel{small caps #1}{#1}&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The repository has a &lt;a href=&quot;https://krautzource.github.io/mathjax-aria-label/&quot;&gt;small example on GitHub pages&lt;/a&gt; and below is a short recording of &lt;a href=&quot;https://help.gnome.org/users/orca/stable/&quot;&gt;Orca&lt;/a&gt; reading the examples in Firefox.&lt;/p&gt;
&lt;video controls=&quot;&quot; width=&quot;auto&quot; style=&quot;width: 100%;&quot;&gt;
&lt;source src=&quot;https://www.peterkrautzberger.org/assets/2020/MathJax-aria-label_Orca_Firefox.mp4&quot; type=&quot;video/webm&quot; /&gt;
Sorry, your browser doesn&#39;t support this embedded video.
&lt;/video&gt;
&lt;p&gt;I hope this gives a first idea of the kind of benefits this simple macro and the underlying technology can enable.&lt;/p&gt;
&lt;h2&gt;Coda&lt;/h2&gt;
&lt;p&gt;There&#39;s nothing wrong with using heuristic-based tools for accessibility purposes if you have no other recourse. Just make sure you can override the heuristics when they fall short. With equations, we just took a good step forward: authors are no longer coerced to rely on heuristics out of their control.&lt;/p&gt;
&lt;p&gt;Reversely, authors can now fix such issues and so they should feel an obligation to do so. Authors can (and should) start thinking about how their own voice comes together in this beautiful medium we call the web.&lt;/p&gt;
&lt;p&gt;This is a good thing. If we cannot give authors full control over their content, we will never reach the web&#39;s full potential.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>ATHEN STEM Accessibility Conference 2022</title>
		<link href="https://www.peterkrautzberger.org/0216/"/>
		<updated>2022-07-03T00:00:00Z</updated>
		<id>https://www.peterkrautzberger.org/0216/</id>
		<content type="html">&lt;p&gt;This is the first time I skipped writing for over a year, I think. Well, good riddance, 2021. You took too much.&lt;/p&gt;
&lt;p&gt;I meant to write about this back in February, right after the conference, traveling south for a couple calm days with friends. But then a fucking war started, a few hundred kilometers away and it all seemed absurd. It still seems absurd. It is terrifying and horrible. War is the most horrible thing.&lt;/p&gt;
&lt;p&gt;I&#39;m slowly coming out of a few really bad years but none of it compares in the least to the horror the people of Ukraine are experiencing.&lt;/p&gt;
&lt;p&gt;I cling to making things normal again. Writing here is something I have wished to come back to again after all this time. The chances that it works out are slim. Too much has happened. Too much still hurts. But I&#39;ll try.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;I gave a talk at &lt;a href=&quot;https://athenpro.org/content/athen-virtual-conference&quot;&gt;ATHEN STEM Accessibility Conference 2022&lt;/a&gt; in February. I spoke about the work I do for the &lt;a href=&quot;https://www.ams.org/&quot;&gt;American Mathematical Society&lt;/a&gt;, primarily how we approach print equation layout on the web, in particular using &lt;a href=&quot;https://github.com/krautzource/aria-tree-walker&quot;&gt;aria-tree-walker&lt;/a&gt; and server-side MathJax.&lt;/p&gt;
&lt;p&gt;You can find &lt;a href=&quot;https://pkra.github.io/2022-athen-stem-conf/&quot;&gt;the slides on github&lt;/a&gt;. They include a bunch of short videos (without captioning, I&#39;m afraid). They&#39;re all done with a real world OA article so you can try to reproduce things.&lt;/p&gt;
&lt;p&gt;There&#39;s also a recording of my talk available from their site. If you can&#39;t access that, ping me and I&#39;ll see what I can do.&lt;/p&gt;
&lt;p&gt;The rest of the conference was somewhat depressing for me. It was example after example of how the empty promises of MathML keep people in the US educational sector in a kind of Stockholm syndrome. Case study after case study showed how flawed everything is both in theory and practice. And yet they cling to 25 years of lies and falsehoods. It would be sad if it wasn&#39;t so incredibly self-inflicted. And infuriatingly dishonest to the students.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>(Print) &quot;Algorithm Layout&quot; in HTML and CSS</title>
		<link href="https://www.peterkrautzberger.org/0217/"/>
		<updated>2022-07-26T00:00:00Z</updated>
		<id>https://www.peterkrautzberger.org/0217/</id>
		<content type="html">&lt;p&gt;July 2022. I started this piece well over three years ago (some time before June 2019 in any case). As it &lt;s&gt;came along&lt;/s&gt; grew out of proportion, I had tried turning it into three pieces but never got far enough to start publishing it. Then I tried to recombine them (some time in 2020?) in the hopes of finally pushing them out but didn&#39;t finish the last few pieces. Then 2021 was worse than 2020 and now it&#39;s 2022. So I&#39;m thinking I will make this a new kind of piece around here: a partially complete piece of writing that may (or more likely: may not) get edits and updates. Let&#39;s jump in then.&lt;/p&gt;
&lt;p&gt;A while ago I started to think about &amp;quot;algorithm layout&amp;quot;. Not syntax highlighting of source code (which &lt;a href=&quot;https://prismjs.com/&quot;&gt;prism.js&lt;/a&gt; handles nicely) but the kind of print traditions captured in the following image.&lt;/p&gt;
&lt;img src=&quot;https://www.peterkrautzberger.org/assets/2020/euclid.png&quot; alt=&quot;Euclid&#39;s algorithm typeset using LaTeX&#39;s algorithmicx package&quot; /&gt;
&lt;h2&gt;Part 1. Prior art and the problem of content conversion&lt;/h2&gt;
&lt;p&gt;If you&#39;re familiar with LaTeX packages such as algorithmicx or algorithm2e you&#39;ll recognize this particular style of layout. As the names of those packages imply, this type of content is more about the abstract algorithms and less about implementation details in a specific language.&lt;/p&gt;
&lt;p&gt;Realizing this specific style on the web is an interesting challenge. On the one hand, it&#39;s a problem of realizing print layout traditions on the web, an area I deal with professionally on a daily basis. On the other hand, there&#39;s an authoring problem behind this: realizing print layout is one thing, realizing it in a way that allows for a good (web!) reading &lt;em&gt;and&lt;/em&gt; authoring experience is another.&lt;/p&gt;
&lt;p&gt;When I started this side project, I had only had a quick look at some tools that solve this problem and before I wanted to write about what I did, I thought I should take another, closer look at them to provide context (and check my own work). I&#39;m glad I didn&#39;t look too closely earlier since that may have sent me off in a completely different direction. It also reminded me of the pitfalls of authoring, in particular print content and conversion.&lt;/p&gt;
&lt;h3&gt;Prior art 1: algorithmicx&lt;/h3&gt;
&lt;p&gt;To pick a starting point, let&#39;s use a classic in every sense of the word: Euclid&#39;s algorithm.&lt;/p&gt;
&lt;p&gt;Here&#39;s what you&#39;d write using the &lt;a href=&quot;https://ctan.org/pkg/algorithmicx&quot;&gt;algorithmicx&lt;/a&gt; LaTeX package.&lt;/p&gt;
&lt;pre class=&quot;language-latex&quot;&gt;&lt;code class=&quot;language-latex&quot;&gt;&lt;span class=&quot;token function selector&quot;&gt;\begin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;algorithm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function selector&quot;&gt;\caption&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Euclid&#39;s algorithm&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token function selector&quot;&gt;\label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;euclid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function selector&quot;&gt;\begin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;algorithmic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token function selector&quot;&gt;\Procedure&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Euclid&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token equation string&quot;&gt;$a,b$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token function selector&quot;&gt;\Comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;The g.c.d. of a and b&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token function selector&quot;&gt;\State&lt;/span&gt; &lt;span class=&quot;token equation string&quot;&gt;$r&lt;span class=&quot;token equation-command regex&quot;&gt;\gets&lt;/span&gt; a&lt;span class=&quot;token equation-command regex&quot;&gt;\bmod&lt;/span&gt; b$&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token function selector&quot;&gt;\While&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token equation string&quot;&gt;$r&lt;span class=&quot;token equation-command regex&quot;&gt;\not&lt;/span&gt;=0$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token function selector&quot;&gt;\Comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;We have the answer if r is 0&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token function selector&quot;&gt;\State&lt;/span&gt; &lt;span class=&quot;token equation string&quot;&gt;$a&lt;span class=&quot;token equation-command regex&quot;&gt;\gets&lt;/span&gt; b$&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token function selector&quot;&gt;\State&lt;/span&gt; &lt;span class=&quot;token equation string&quot;&gt;$b&lt;span class=&quot;token equation-command regex&quot;&gt;\gets&lt;/span&gt; r$&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token function selector&quot;&gt;\State&lt;/span&gt; &lt;span class=&quot;token equation string&quot;&gt;$r&lt;span class=&quot;token equation-command regex&quot;&gt;\gets&lt;/span&gt; a&lt;span class=&quot;token equation-command regex&quot;&gt;\bmod&lt;/span&gt; b$&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token function selector&quot;&gt;\EndWhile&lt;/span&gt;&lt;span class=&quot;token function selector&quot;&gt;\label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;euclidendwhile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token function selector&quot;&gt;\State&lt;/span&gt; &lt;span class=&quot;token function selector&quot;&gt;\textbf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;return&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token equation string&quot;&gt;$b$&lt;/span&gt;&lt;span class=&quot;token function selector&quot;&gt;\Comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;The gcd is b&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token function selector&quot;&gt;\EndProcedure&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function selector&quot;&gt;\end&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;algorithmic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function selector&quot;&gt;\end&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;algorithm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and you&#39;d get the image from earlier. It&#39;s fun to note that this source is straight from the package documentation, including inconsistencies (such as a mismatch of math mode in states and comments).&lt;/p&gt;
&lt;p&gt;Let&#39;s naively HTML-ify this:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;algorithm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;caption&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;euclid&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Euclid&#39;s algorithm&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;caption&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;algorithmic&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;numberLineSkip&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;procedure&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Euclid&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;a,b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;The g.c.d. of a and b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;r â a mod b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;while&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;r =Ì¸ 0&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;We have the answer if r is 0&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;a â b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;b â r&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;r â a mod b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;while&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;return&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;The gcd is b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;procedure&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;algorithmic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;algorithm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That seems fairly straight forward even if the label &amp;quot;euclidendwhile&amp;quot; has been lost.&lt;/p&gt;
&lt;p&gt;TODO I&#39;d like to focus on two problems&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to get from here to something we can style easily (for the web)&lt;/li&gt;
&lt;li&gt;while keeping things relatively easy to style (and customize/extend)&lt;/li&gt;
&lt;li&gt;while keeping things relatively easy to author&lt;/li&gt;
&lt;li&gt;while making this accessible&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or put differently: how to move from content conversion to content authoring.&lt;/p&gt;
&lt;h3&gt;Pior art 2: latexml&lt;/h3&gt;
&lt;p&gt;While I personally wouldn&#39;t recommend it, latexml is an interesting option to consider because it is so heavily focuses on extracting semantic structure from print documents.&lt;/p&gt;
&lt;p&gt;Here&#39;s a codepen embedding of what you&#39;d get from it:&lt;/p&gt;
&lt;p class=&quot;codepen&quot; data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-default-tab=&quot;result&quot; data-user=&quot;pkra&quot; data-slug-hash=&quot;8c2d4358f4fd67d595c78e3e287af6e8&quot; style=&quot;height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot; data-pen-title=&quot;Algorithms via LaTeXML&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/pkra/pen/8c2d4358f4fd67d595c78e3e287af6e8&quot;&gt;
  Algorithms via LaTeXML&lt;/a&gt; by Peter Krautzberger (&lt;a href=&quot;https://codepen.io/pkra&quot;&gt;@pkra&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;So to me this is a terrible mess of markup and layout but it&#39;s not surprising given what latexml focuses on. When you get into the business of generating HTML and CSS from things that are fairly far removed from HTML and CSS (here: long form print documents) you are bound to create such a mess of a markup. That&#39;s not a criticism; I think it&#39;s simply inevitable.&lt;/p&gt;
&lt;p&gt;After all, an author who uses latexml was not interested in authoring web content. Instead, they authored print content using LaTeX and then used a second piece of software (filled to the brim with heuristics) to generate a close approximation of the print product in a custom XML. In a third step, they created HTML and CSS from that.&lt;/p&gt;
&lt;p&gt;Nevertheless, there is a lot of noise in this which may make it hard to explore the example. Here&#39;s another codepen embedding with a more minimal version of the latexml output that has (hopefully) less noise and still exhibits the inherent issues I see with this approach towards authoring of web content.&lt;/p&gt;
&lt;p class=&quot;codepen&quot; data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-default-tab=&quot;result&quot; data-user=&quot;pkra&quot; data-slug-hash=&quot;f6c5ff9db52d4e0f6cc903b288c21741&quot; style=&quot;height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot; data-pen-title=&quot;Algorithms via LaTeXML, reduced&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/pkra/pen/f6c5ff9db52d4e0f6cc903b288c21741&quot;&gt;
  Algorithms via LaTeXML, reduced&lt;/a&gt; by Peter Krautzberger (&lt;a href=&quot;https://codepen.io/pkra&quot;&gt;@pkra&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;A quick list of things that jump out when going through this.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;functional/atomic CSS (in the tailwind or tachyon sense), e.g., a border-top class, a small-caps class, a bold class - a natural concept for content conversion from an only potentially structured format like TeX.&lt;/li&gt;
&lt;li&gt;inline styles - usually necessary when print layout is mimicked in detail (though somewhat surprising in this particular case which looks like it could be replaced by a functional class if you think about it from a TeX point of view)&lt;/li&gt;
&lt;li&gt;the weird case of line 3 - it looks like a bug that the comment is wrapped in the bold part of the &lt;code&gt;while...do&lt;/code&gt; construct and thus needs a font weight override (but maybe it&#39;s a weird thing in the LaTeX package)&lt;/li&gt;
&lt;li&gt;right-floating comments can overlap on small viewports&lt;/li&gt;
&lt;li&gt;line counters and comment markers are yucky (much worse in the original)&lt;/li&gt;
&lt;li&gt;divs and spans galore. Each &amp;quot;line&amp;quot; is a div but the line counter and state are wrapped together&lt;/li&gt;
&lt;li&gt;and the &amp;quot;highlight&amp;quot;: repeated nbsp&#39;s to create indentation. Yikes, the 90s want their spacer GIFs back. (But again, this might be a faithful conversion from how the LaTeX package realizes the print layout.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&#39;m not trying to complain too much here. Again, this is mostly what you&#39;d expect when you build a tool like latexml. Print is just a crappy format to generate web content from and even good LaTeX can&#39;t save you from that fact.&lt;/p&gt;
&lt;h3&gt;Prior art 2: pseudocode&lt;/h3&gt;
&lt;p&gt;The next example is a probably less known JS library called pseudocode.js.&lt;/p&gt;
&lt;p&gt;Here&#39;s again a codepen embedding of what we might get.&lt;/p&gt;
&lt;p class=&quot;codepen&quot; data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-default-tab=&quot;result&quot; data-user=&quot;pkra&quot; data-slug-hash=&quot;0d056d577e3891483c4e60adf83db41c&quot; style=&quot;height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot; data-pen-title=&quot;pseudocode.js&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/pkra/pen/0d056d577e3891483c4e60adf83db41c&quot;&gt;
  pseudocode.js&lt;/a&gt; by Peter Krautzberger (&lt;a href=&quot;https://codepen.io/pkra&quot;&gt;@pkra&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;Cleaning it up a bit seems harder given. Maybe that&#39;s because it is closer to thinking in terms of web design (as opposed to print-reproduction). But we can delete the equation layout mess (which is weirdly inconsistent in the algorithmicx source anyway).&lt;/p&gt;
&lt;p class=&quot;codepen&quot; data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;pkra&quot; data-slug-hash=&quot;5d3a2662d84306e0dac071528e48d8ca&quot; style=&quot;height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot; data-pen-title=&quot;pseudocode.js, reduced&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/pkra/pen/5d3a2662d84306e0dac071528e48d8ca&quot;&gt;
  pseudocode.js, reduced&lt;/a&gt; by Peter Krautzberger (&lt;a href=&quot;https://codepen.io/pkra&quot;&gt;@pkra&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;Again some random observations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;moar divs. Not even a figure/figcaption (but a class &lt;code&gt;with-caption&lt;/code&gt;); that&#39;s a bit disappointing.&lt;/li&gt;
&lt;li&gt;decent line-wrapping on small screens is nice&lt;/li&gt;
&lt;li&gt;class names are less functional and more semantic (in the sense of layout), e.g., ps-line. That kind of intent seems appropriate.&lt;/li&gt;
&lt;li&gt;odd inline styles
&lt;ul&gt;
&lt;li&gt;canceling things out: &lt;code&gt;style=&amp;quot;text-indent:-1.2em;padding-left:1.2em;&amp;quot;&lt;/code&gt; is a funny extreme but probably just a side effect of the overall strategy to combine margin-right with negative text-indent.&lt;/li&gt;
&lt;li&gt;rounding issues &lt;code&gt;style=&amp;quot;margin-left:1.7999999999999998em;&amp;quot;&lt;/code&gt; - just a bug but makes me wonder about code quality (ok, not really).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;relative positioning. Feels weird to me for this kind of layout (of course it&#39;s at the heart of how this particular approach works)&lt;/li&gt;
&lt;li&gt;nested substructures - that is right up my alley (more on that later hopefully). Stacking margin-left is neat but comes at the price of negative text-indent shenanigans for the line counters; I don&#39;t get why the margin is inline CSS rather than a class but there&#39;s possibly a decent reason for that (e.g., authoring).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Coda Part 1.&lt;/h3&gt;
&lt;p&gt;In both cases, the main reason why I find these approaches lacking lies, I think, in the fact that they are the result of (print) content conversion. The disconnect between the authoring and the layout is too large to get one in touch with the other. This is a loss for both sides: the layout gets messy and the author comes no closer to understanding the medium they author for.&lt;/p&gt;
&lt;p&gt;A typical side effect of this shows when you want to modify the output: neither output can be re-arranged efficiently. Usually, all you can do is go to the source, change it, and convert it again. We&#39;llcome back to that later.&lt;/p&gt;
&lt;p&gt;To be clear, I&#39;m not saying that some of the &amp;quot;bad&amp;quot; design decisions could be avoided; I definitely haven&#39;t found a way around every pain point. But my experience has been that the &lt;a href=&quot;https://en.wikipedia.org/wiki/Law_of_the_instrument&quot;&gt;law of the instrument&lt;/a&gt; is at the heart of the problem. Content conversion inevitably leads to certain types of hacks (such as meaningless DOM structures, class names and inline styles) to allow authors customizations without them having to think about the actual medium. If it&#39;s content conversion from a format meant for print, this is problem exacerbated because the media and their traditions often match poorly. But once those hacky instruments are in the tool belt, it&#39;s hard not to use them and you end up with hacks all the way down.&lt;/p&gt;
&lt;p&gt;In the next part, I&#39;ll explore a different approach, also thinking about it from the perspective of the source material but hopefully with some level of detachment. After that, perhaps I&#39;ll find time to jot down some ideas on how to move towards authoring. But this piece has been more fun than I thought it would be; it&#39;s been interesting to dive a little deeper into these two after trying things on my own; good to see similarities and differences.&lt;/p&gt;
&lt;h2&gt;Part 2. A first draft&lt;/h2&gt;
&lt;p&gt;Let&#39;s go back to the beginning.&lt;/p&gt;
&lt;img src=&quot;https://www.peterkrautzberger.org/assets/2020/euclid.png&quot; alt=&quot;Euclid&#39;s algorithm typeset using LaTeX&#39;s algorithmicx package&quot; /&gt;
&lt;p&gt;In Part 1 I started at the wrong end, so to speak, and I looked at solutions that try to be keep the spirit of the print source, both in authoring &amp;quot;convenience&amp;quot; and layout design. I also outlined what I think of as issues and limitations of such (print) content conversion.&lt;/p&gt;
&lt;p&gt;Still, it is painfully fascinating. I wanted to find another way of dealing with this problem and, ideally, learning (with detachement) from the print authoring experience to enable web authoring.&lt;/p&gt;
&lt;h3&gt;Back to the source: algorithmicx (again)&lt;/h3&gt;
&lt;p&gt;Again, we keep to the classics and Euclid&#39;s algorithm.&lt;/p&gt;
&lt;p&gt;Here&#39;s what you&#39;d write in algorithmicx.&lt;/p&gt;
&lt;pre class=&quot;language-latex&quot;&gt;&lt;code class=&quot;language-latex&quot;&gt;&lt;span class=&quot;token function selector&quot;&gt;\begin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;algorithm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function selector&quot;&gt;\caption&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Euclid&#39;s algorithm&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token function selector&quot;&gt;\label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;euclid&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function selector&quot;&gt;\begin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;algorithmic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token function selector&quot;&gt;\Procedure&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Euclid&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token equation string&quot;&gt;$a,b$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token function selector&quot;&gt;\Comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;The g.c.d. of a and b&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token function selector&quot;&gt;\State&lt;/span&gt; &lt;span class=&quot;token equation string&quot;&gt;$r&lt;span class=&quot;token equation-command regex&quot;&gt;\gets&lt;/span&gt; a&lt;span class=&quot;token equation-command regex&quot;&gt;\bmod&lt;/span&gt; b$&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token function selector&quot;&gt;\While&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token equation string&quot;&gt;$r&lt;span class=&quot;token equation-command regex&quot;&gt;\not&lt;/span&gt;=0$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token function selector&quot;&gt;\Comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;We have the answer if r is 0&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token function selector&quot;&gt;\State&lt;/span&gt; &lt;span class=&quot;token equation string&quot;&gt;$a&lt;span class=&quot;token equation-command regex&quot;&gt;\gets&lt;/span&gt; b$&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token function selector&quot;&gt;\State&lt;/span&gt; &lt;span class=&quot;token equation string&quot;&gt;$b&lt;span class=&quot;token equation-command regex&quot;&gt;\gets&lt;/span&gt; r$&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token function selector&quot;&gt;\State&lt;/span&gt; &lt;span class=&quot;token equation string&quot;&gt;$r&lt;span class=&quot;token equation-command regex&quot;&gt;\gets&lt;/span&gt; a&lt;span class=&quot;token equation-command regex&quot;&gt;\bmod&lt;/span&gt; b$&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token function selector&quot;&gt;\EndWhile&lt;/span&gt;&lt;span class=&quot;token function selector&quot;&gt;\label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;euclidendwhile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token function selector&quot;&gt;\State&lt;/span&gt; &lt;span class=&quot;token function selector&quot;&gt;\textbf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;return&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token equation string&quot;&gt;$b$&lt;/span&gt;&lt;span class=&quot;token function selector&quot;&gt;\Comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;The gcd is b&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token function selector&quot;&gt;\EndProcedure&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function selector&quot;&gt;\end&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;algorithmic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function selector&quot;&gt;\end&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;algorithm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and you&#39;d get the image from earlier. And here&#39;s our naive HTML-ification again:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;algorithm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;caption&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;euclid&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Euclid&#39;s algorithm&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;caption&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;algorithmic&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;numberLineSkip&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;procedure&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Euclid&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;a,b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;The g.c.d. of a and b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;r â a mod b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;while&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;r =Ì¸ 0&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;We have the answer if r is 0&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;a â b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;b â r&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;                &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;r â a mod b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;while&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;return&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;state&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;The gcd is b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;comment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;procedure&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;algorithmic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;algorithm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some random thoughts when looking at this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we should obviously use a figure with figcaption element for HTML; maybe sprinkle some aria-roledescription in there.&lt;/li&gt;
&lt;li&gt;CSS pseudo-content seems an obvious choice for &amp;quot;Procedure&amp;quot; and &amp;quot;While...do / done&amp;quot;.&lt;/li&gt;
&lt;li&gt;why don&#39;t those comments align? Seems worth changing.&lt;/li&gt;
&lt;li&gt;As I mentioned already, I like the nesting (Procedure/EndProcedure, While/EndWhile). We should find a way to keep it. But that also seems hard thanks to those line counters.&lt;/li&gt;
&lt;li&gt;This layout is obviously a case for grid&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;head on&lt;/h3&gt;
&lt;p&gt;So let&#39;s try not to overthink this, let&#39;s try not to take more than inspiration from the source, let&#39;s try to think about the layout, its meaning, and how it could work &lt;a href=&quot;https://frankchimero.com/blog/2015/the-webs-grain/&quot;&gt;with the web&#39;s grain&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What do we need at first sight?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;multiple lines of 3 columns: counter, content, comment
&lt;ul&gt;
&lt;li&gt;get nice alignment&lt;/li&gt;
&lt;li&gt;try to avoid tables (for both layout and accessibility but it&#39;s complicated; maybe more on that later)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;a way to handle begin/end type of things (subroutines, loops etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, the obvious modern choice for two dimensional layouts is CSS grid. And CSS counters should help as well:&lt;/p&gt;
&lt;style&gt;
section {
  margin-bottom: 1em;
  overflow: auto;
}

.sc {
  font-variant: small-caps;
}
&lt;/style&gt;
&lt;style&gt;.algorithm {
  counter-reset: algolinecounter;
  display: grid;
  grid-template-columns: repeat(3, max-content);
  grid-column-gap: 1em;
}
&lt;/style&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.algorithm&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;counter-reset&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; algolinecounter&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; grid&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;3&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; max-content&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid-column-gap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To try it out, here&#39;s a dummy set of two &amp;quot;lines&amp;quot;, first as part of the page then as code.&lt;/p&gt;
&lt;section class=&quot;algorithm&quot;&gt;
    &lt;div&gt;Counter&lt;/div&gt;
    &lt;div&gt;Content&lt;/div&gt;
    &lt;div&gt;Comment&lt;/div&gt;
    &lt;div&gt;Counter&lt;/div&gt;
    &lt;div&gt;Content&lt;/div&gt;
    &lt;div&gt;Comment&lt;/div&gt;
&lt;/section&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;algorithm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Counter&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Content&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Comment&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Counter&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Content&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Comment&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nothing really to see yet, so let&#39;s move on.&lt;/p&gt;
&lt;p&gt;To handle our line counters, we use the counters (obviously) but we also get some critical help from grid: since we might not have comments, we don&#39;t know whether the line is full. But that&#39;s not a problem with grid - we can just force our counter to always start in the first column&lt;/p&gt;
&lt;style&gt;
.counter {
  grid-column-start: 1;
  counter-increment: algolinecounter;
}

.counter::before {
  content: counter(algolinecounter) &#39;: &#39;;
}
&lt;/style&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.counter&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;grid-column-start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;counter-increment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; algolinecounter&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.counter::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;algolinecounter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;: &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To try it out, here&#39;s two lines with only the second on having a comment. Again, first as part of the page, then as source.&lt;/p&gt;
&lt;section class=&quot;algorithm&quot;&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div&gt;Content&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div&gt;Content&lt;/div&gt;
&lt;div&gt;Comment&lt;/div&gt;
&lt;/section&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;algorithm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Content&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Content&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Comment&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a good point to think about accessiblity. CSS generated content is of course ok but we might want to add some ARIA attributes to indicate the visual effect of starting a line; then again, maybe that tends to be clear from context and we shouldn&#39;t add noise. It&#39;s tempting to aria-hide the counters and use table roles which would gives AT users the advantage of table walkers - a grid role would be more appropriate but then we&#39;d have to write our own walker so definitely out of scope for a first draft. Anyway, we don&#39;t have to do this right now, we just have to keep it in mind.&lt;/p&gt;
&lt;p&gt;Next up, let&#39;s deal with the other fixed property: comments. This is simple anyway:&lt;/p&gt;
&lt;style&gt;
.comment {
  margin-left: 3em;
}
.comment::before {
  content: &#39;â· &#39;;
}
&lt;/style&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.comment&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 3em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.comment::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;â· &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This looks nice enough but we should probably hide that from non-visual users. We could indicate that it&#39;s a comment but again it might be enough to grok this from context. After all, context is all we have visually. Let&#39;s take a look, in the page and source:&lt;/p&gt;
&lt;section class=&quot;algorithm&quot;&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div&gt;Content&lt;/div&gt;
&lt;div class=&quot;comment&quot;&gt;Comment, longer&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div&gt;Content&lt;/div&gt;
&lt;div class=&quot;comment&quot;&gt;Comment&lt;/div&gt;
&lt;/section&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;algorithm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Content&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Comment, longer&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Content&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Comment&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Oooh, look at that alignment! Isn&#39;t it pretty?&lt;/p&gt;
&lt;p&gt;So, 9 lines of CSS and our basic layout is done. Nice.&lt;/p&gt;
&lt;p&gt;Since this is a first draft, let&#39;s continue not to over think this. The begin/end routines seem to always have, well, a beginning and an end. So let&#39;s just make that happen.&lt;/p&gt;
&lt;style&gt;
.while::before,
.while::after {
  font-weight: bolder;
}
.while__start::before {
  content: &#39;while &#39;;
}
.while__start::after {
  content: &#39; do&#39;;
}
.while__end::before {
  content: &#39;end while&#39;;
}
&lt;/style&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.while::before,&lt;br /&gt;.while::after&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; bolder&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.while__start::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;while &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.while__start::after&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39; do&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.while__end::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;end while&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In action and as source:&lt;/p&gt;
&lt;section class=&quot;algorithm&quot;&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__start&quot;&gt;
    Some condition
&lt;/div&gt;
&lt;div class=&quot;comment&quot;&gt;
    Otherwise, we&#39;re done.
&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div&gt;We do some work&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__end&quot;&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;algorithm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__start&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Some condition&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Otherwise, we&#39;re done.&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;We do some work&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__end&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The final piece doesn&#39;t look very nice but neither does the original source.&lt;/p&gt;
&lt;p&gt;There&#39;s a worse glitch though: if you look at the original, the part &amp;quot;inside&amp;quot; the loop is indented. This is slightly tricky since we don&#39;t have a good way of writing a selector for those kinds of elements. Luckily, this is a first draft and we&#39;re lazy, so let&#39;s just add a helper class.&lt;/p&gt;
&lt;style&gt;
.ml1 {
  margin-left: 1em;
}
&lt;/style&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.ml1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Problem solved - let&#39;s have a look:&lt;/p&gt;
&lt;section class=&quot;algorithm&quot;&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__start&quot;&gt;
    Some condition
&lt;/div&gt;
&lt;div class=&quot;comment&quot;&gt;
    Otherwise, we&#39;re done.
&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;ml1&quot;&gt;We do some work&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__end&quot;&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;algorithm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__start&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Some condition&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Otherwise, we&#39;re done.&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;ml1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;We do some work&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__end&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Moving on to the last issue, nested subroutines, so let&#39;s copy and paste our loop.&lt;/p&gt;
&lt;section class=&quot;algorithm&quot;&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__start&quot;&gt;
    Some condition
&lt;/div&gt;
&lt;div class=&quot;comment&quot;&gt;
    Otherwise, we&#39;re done.
&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__start&quot;&gt;
    Some condition
&lt;/div&gt;
&lt;div class=&quot;comment&quot;&gt;
    Otherwise, we&#39;re done.
&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;ml1&quot;&gt;We do some work&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__end&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__end&quot;&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;algorithm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__start&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Some condition&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Otherwise, we&#39;re done.&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__start&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Some condition&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Otherwise, we&#39;re done.&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;ml1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;We do some work&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__end&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__end&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But of course now we have the same margin problem all over again, so we don&#39;t think too hard and add another helper.&lt;/p&gt;
&lt;style&gt;
.ml2 {
  margin-left: 2em;
}
&lt;/style&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.ml2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we can make it:&lt;/p&gt;
&lt;section class=&quot;algorithm&quot;&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__start&quot;&gt;
    Some condition
&lt;/div&gt;
&lt;div class=&quot;comment&quot;&gt;
    Otherwise, we&#39;re done.
&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;ml1 while while__start&quot;&gt;
    Some condition
&lt;/div&gt;
&lt;div class=&quot;comment&quot;&gt;
    Otherwise, we&#39;re done.
&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;ml2&quot;&gt;We do some work&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;ml1 while while__end&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__end&quot;&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;algorithm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__start&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Some condition&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Otherwise, we&#39;re done.&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;ml1 while while__start&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Some condition&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;        Otherwise, we&#39;re done.&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;ml2&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;We do some work&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;ml1 while while__end&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__end&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, it&#39;s clear that we have a lurking problem but luckily this was just a first draft and we can finish our example. Let&#39;s just add a procedure class as follows.&lt;/p&gt;
&lt;style&gt;
.procedure::before {
  font-weight: bolder;
}
.procedure__start::before {
  content: &#39;procedure &#39;;
}
.procedure__end::before {
  content: &#39;end procedure&#39;;
}
&lt;/style&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.procedure::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; bolder&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.procedure__start::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;procedure &#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token selector&quot;&gt;.procedure__end::before&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;end procedure&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And it looks like we&#39;re there.&lt;/p&gt;
&lt;section class=&quot;algorithm&quot;&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;procedure procedure__start&quot;&gt;
    &lt;span class=&quot;sc&quot;&gt;Euclid&lt;/span&gt;(&lt;i&gt;a, b&lt;/i&gt;)
&lt;/div&gt;
&lt;div class=&quot;comment&quot;&gt;
    The g.c.d. of &lt;i&gt;a&lt;/i&gt; and &lt;i&gt;b&lt;/i&gt;
&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;state ml1&quot;&gt;&lt;i&gt;r â a &lt;/i&gt;mod&lt;i&gt; b&lt;/i&gt;&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__start ml1&quot;&gt;
    &lt;i&gt;r â  &lt;/i&gt;0
&lt;/div&gt;
&lt;div class=&quot;comment&quot;&gt;
    We have the answer if &lt;i&gt;r&lt;/i&gt; is 0
&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;ml2&quot;&gt;&lt;i&gt;a â b&lt;/i&gt;&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;state ml2&quot;&gt;&lt;i&gt;b â r&lt;/i&gt;&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;ml2&quot;&gt;&lt;i&gt;r â a &lt;/i&gt;mod&lt;i&gt; b&lt;/i&gt;&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;while while__end  ml1&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;ml1&quot;&gt;&lt;strong&gt;return&lt;/strong&gt; &lt;i&gt;b&lt;/i&gt;&lt;/div&gt;
&lt;div role=&quot;region&quot; aria-label=&quot;comment&quot; class=&quot;comment&quot;&gt;
    The gcd is &lt;i&gt;b&lt;/i&gt;
&lt;/div&gt;
&lt;div role=&quot;region&quot; aria-label=&quot;line&quot; class=&quot;counter&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;procedure procedure__end&quot;&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;algorithm&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;procedure procedure__start&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;sc&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Euclid&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;a, b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;)&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    The g.c.d. of &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;a&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; and &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;state ml1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;r â a &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;mod&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__start ml1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;r â  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;0&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    We have the answer if &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;r&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; is 0&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;ml2&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;a â b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;state ml2&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;b â r&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;ml2&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;r â a &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;mod&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;while while__end  ml1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;ml1&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;return&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;strong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;region&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;comment&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    The gcd is &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;b&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;region&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;line&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;counter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;procedure procedure__end&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;section&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Coda Part 2.&lt;/h3&gt;
&lt;p&gt;Not bad for a first draft. Grid makes so many things just easy, sprinkle some counters.&lt;/p&gt;
&lt;p&gt;There are a couple of glaring issues at this point&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;those helper classes feel like content conversion. Can we do better?&lt;/li&gt;
&lt;li&gt;grid soup - could subroutines be wrapped in a single element?&lt;/li&gt;
&lt;li&gt;responsivity - scrolling is not awesome.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inevitably, these will lead us into the weeds. But at least the web&#39;s weeds.&lt;/p&gt;
&lt;h2&gt;Part 3. But what is it&lt;/h2&gt;
&lt;p&gt;Let&#39;s go back to our starting point.&lt;/p&gt;
&lt;img src=&quot;https://www.peterkrautzberger.org/assets/2020/euclid.png&quot; alt=&quot;Euclid&#39;s algorithm typeset using LaTeX&#39;s algorithmicx package&quot; /&gt;
&lt;p&gt;In Part 1, I started at the wrong end, if you will: I looked at a TeX source and then at existing solutions that aim to stay close to print, both in authoring &amp;quot;convenience&amp;quot; and layout design. In Part 2, I went through a rought draft of realizing a simlar layout in CSS &amp;quot;properly&amp;quot;.&lt;/p&gt;
&lt;p&gt;Now, let&#39;s try to let go.&lt;/p&gt;
&lt;h3&gt;Forget the source, Luke.&lt;/h3&gt;
&lt;p&gt;What can we observe for this layout?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a title&lt;/li&gt;
&lt;li&gt;a bunch of numbered lines&lt;/li&gt;
&lt;li&gt;containing three distinct parts per line - counter, main block, comment block&lt;/li&gt;
&lt;li&gt;indentation where subgroups of lines have their main blocks indented&lt;/li&gt;
&lt;li&gt;some bold key words that match those subgroups&lt;/li&gt;
&lt;li&gt;some decorative top/bottom borders around the title and whole algorithm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first draft was trying to be so minimalistic that it skipped on the two primary semantic pieces: lines and subgroups of lines. Isn&#39;t that odd?&lt;/p&gt;
&lt;p&gt;So thinking about those two, where would we start?&lt;/p&gt;
&lt;h3&gt;Authoring with batteries included&lt;/h3&gt;
&lt;p&gt;There are a couple of conveniences when it comes to authoring that I&#39;d like to see preserved. The core problem is change: removing and injecting content into other content. You want it to magically work and of course it often doesn&#39;t. In particular &lt;strong&gt;copy&amp;amp;paste&lt;/strong&gt; is a key usability challenge that good authoring tools try to solve. Obviously, this is is a hard problem in general.&lt;/p&gt;
&lt;p&gt;It also leads to other factors such as good (automated) default behavior alongside customizability aka &amp;quot;macros&amp;quot;.&lt;/p&gt;
&lt;p&gt;The first challenge from the first draft is: how do we solve the indentation problem, i.e., how can we avoid the &lt;code&gt;.ml1&lt;/code&gt;, &lt;code&gt;.ml2&lt;/code&gt; etc classes. Because if we cannot solve that, authors will have to a) add those classes themselves and b) update them whenever they move or add something to an existing structure.&lt;/p&gt;
&lt;h3&gt;Coda&lt;/h3&gt;
&lt;p&gt;This coda marks where the &amp;quot;original&amp;quot; draft ended, i.e, the draft from which I started in June 2022 (though many edits were done in June / July 2022). Handling the indentation is really the only &amp;quot;hard&amp;quot; problem for this layout so I&#39;m not sure why I stopped here.&lt;/p&gt;
&lt;p&gt;I have a couple of codepens from that time that might be worth writing about. And then there&#39;s the solution I adopted at work to talk about (which, inevitably, is different). Let&#39;s stop here and see if I get around to those updates.&lt;/p&gt;
</content>
	</entry>
</feed>
