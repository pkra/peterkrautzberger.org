<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Peter Krautzberger</title>
	<subtitle> Â· on the web</subtitle>
	<link href="https://www.peterkrautzberger.org/atom.xml" rel="self"/>
	<link href="https://www.peterkrautzberger.org/"/>
	<updated>2019-12-30T23:00:00+01:00</updated>
	<id>https://www.peterkrautzberger.org/</id>
	<author>
		<name>Peter Krautzberger</name>
		<email>p.krautzberger@gmail.com</email>
	</author>
	
	<entry>
		<title>Brace(s) yourself</title>
		<link href="https://www.peterkrautzberger.org/0204/"/>
		<updated>2018-04-18T22:00:00+02:00</updated>
		<id>https://www.peterkrautzberger.org/0204/</id>
		<content type="html">&lt;p&gt;I recently read &lt;a href=&quot;https://css-tricks.com/why-would-you-do-that-in-css/&quot;&gt;Why would you do that?&lt;/a&gt; on CSS Tricks and it reminded me that I had meant to write this piece a month ago.&lt;/p&gt;
&lt;p&gt;So &lt;a href=&quot;https://www.peterkrautzberger.org/0203/&quot;&gt;I recently wrote about a fragment of mathematical content&lt;/a&gt; and a big part of it was the problem of stretchy braces. After building the &amp;quot;plain&amp;quot; HTML+CSS example at the end (re-using an extremely clever solution from the upcoming MathJax v3), I kept thinking: this should be easier. Luckily, this year I&#39;m dedicating a chunk of my spare time to the &lt;a href=&quot;https://w3c.github.io/mathonwebpages/&quot;&gt;MathOnWeb Community Group&lt;/a&gt;&#39;s new task force focused on CSS, looking for (old and new) ideas that might help simplify equation layout using CSS.&lt;/p&gt;
&lt;p&gt;So one thing led to another and I found myself coming back to an old thought of mine.&lt;/p&gt;
&lt;h2&gt;What&#39;s in a name?&lt;/h2&gt;
&lt;p&gt;Stretchy characters like those braces, what are they &lt;em&gt;really&lt;/em&gt;? Like, &lt;em&gt;really really&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;Let&#39;s look at what they are called. As a matter of fact, they are called various things but the most generic term is possibly &lt;a href=&quot;https://en.wikipedia.org/wiki/Bracket&quot;&gt;&lt;em&gt;bracket&lt;/em&gt;&lt;/a&gt;. However in the context of equation layout, the more common terminology might be &lt;em&gt;delimiter&lt;/em&gt; and &lt;em&gt;fence&lt;/em&gt;. In particular, MathML provides an &lt;code&gt;&amp;lt;mfenced&amp;gt;&lt;/code&gt; tag (though for various reasons the equivalent &lt;code&gt;&amp;lt;mrow&amp;gt;&lt;/code&gt;+&lt;code&gt;&amp;lt;mo&amp;gt;&lt;/code&gt; constructions tend to be preferred by most tools).&lt;/p&gt;
&lt;p&gt;Now both brackets, fences and delimiters sound awfully similar to a very common concept. Where do you usually put up a fence? Where do you delimit something? &lt;strong&gt;At a border.&lt;/strong&gt; It&#39;s a small idea, obviously, but what if we could solve the problem of stretchy constructions using borders?&lt;/p&gt;
&lt;p&gt;What if somebody else already has?&lt;/p&gt;
&lt;h2&gt;Previous Art&lt;/h2&gt;
&lt;p&gt;Well, you could go visit codepen and &lt;a href=&quot;https://codepen.io/search/pens?q=brace&amp;amp;page=1&amp;amp;order=popularity&amp;amp;depth=everything&amp;amp;show_forks=false&quot;&gt;simply search for &lt;em&gt;brace&lt;/em&gt;&lt;/a&gt; and, lo and behold, you find 4 perfectly fine specimens in CSS. Turns out, designers love pretty things, who&#39;d have thunk.&lt;/p&gt;
&lt;p&gt;If you dig a little deeper, you&#39;ll end up with basically three approaches.&lt;/p&gt;
&lt;p&gt;The first one (with several interesting forks) is by &lt;a href=&quot;https://codepen.io/lrenhrda/&quot;&gt;Lauren Herda&lt;/a&gt;.&lt;/p&gt;
&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;hkLIe&quot; data-default-tab=&quot;result&quot; data-user=&quot;lrenhrda&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Single-Element Curly Brace&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/lrenhrda/pen/hkLIe/&quot;&gt;Single-Element Curly Brace&lt;/a&gt; by Lauren Herda (&lt;a href=&quot;https://codepen.io/lrenhrda&quot;&gt;@lrenhrda&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;It is really pretty -- look Ma, &lt;a href=&quot;https://a.singlediv.com/&quot;&gt;a single div&lt;/a&gt;! (Except that it doesn&#39;t quite work on Chrome since an &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt; gets &lt;code&gt;overflow:hidden&lt;/code&gt; from the user agent style sheet.)&lt;/p&gt;
&lt;p&gt;That was fun. Let&#39;s do two more: one from &lt;a href=&quot;https://codepen.io/MasterThrasher/&quot;&gt;Jakob Christoffersen&lt;/a&gt;&lt;/p&gt;
&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;mOEjoK&quot; data-default-tab=&quot;result&quot; data-user=&quot;MasterThrasher&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;curly braces css&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/MasterThrasher/pen/mOEjoK/&quot;&gt;curly braces css&lt;/a&gt; by Jakob Christoffersen (&lt;a href=&quot;https://codepen.io/MasterThrasher&quot;&gt;@MasterThrasher&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;and one from &lt;a href=&quot;https://codepen.io/mexn/&quot;&gt;@mexn&lt;/a&gt;:&lt;/p&gt;
&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;xegaF&quot; data-default-tab=&quot;result&quot; data-user=&quot;mexn&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;CSS Curly Brace&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/mexn/pen/xegaF/&quot;&gt;CSS Curly Brace&lt;/a&gt; by Markus (&lt;a href=&quot;https://codepen.io/mexn&quot;&gt;@mexn&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;Both are slighly more complicated than the first one. Instead of the radial gradient for the middle piece, they both use 6 elements with border-radius (though the last one has only two elements with pseudo-elements). If you dive into their forks, you&#39;ll find lots of interesting variations, too.&lt;/p&gt;
&lt;p&gt;The point is: this problem has in a very real sense actually been solved in CSS and you can do lots of fun variations yourself.&lt;/p&gt;
&lt;p&gt;Such as this one&lt;/p&gt;
&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;YagEJb&quot; data-default-tab=&quot;result&quot; data-user=&quot;pkra&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;stretchy brace &quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/pkra/pen/YagEJb/&quot;&gt;stretchy brace &lt;/a&gt; by Peter Krautzberger (&lt;a href=&quot;https://codepen.io/pkra&quot;&gt;@pkra&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;or this one&lt;/p&gt;
&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;OvYeoq&quot; data-default-tab=&quot;result&quot; data-user=&quot;pkra&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;stretchy brace, single-div&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/pkra/pen/OvYeoq/&quot;&gt;stretchy brace, single-div&lt;/a&gt; by Peter Krautzberger (&lt;a href=&quot;https://codepen.io/pkra&quot;&gt;@pkra&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;(Fun fact: using percentages in the border radius leads to some really cute behavior across sizes.)&lt;/p&gt;
&lt;h2&gt;Objection!&lt;/h2&gt;
&lt;p&gt;Now you might say it hasn&#39;t solved the &lt;em&gt;real&lt;/em&gt; problem. Here are a couple of counterarguments:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It has no character!&lt;/strong&gt; Gasp! It&#39;s true that in typical print equation layout engines you&#39;ll still have a character there. Well, you could just add a hidden one, no?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It doesn&#39;t work well on small sizes!&lt;/strong&gt; In typical print equation layout, you&#39;ll see several sizes of a brace being used for smaller heights (with possibly slight design variations for readability) after which the layout would switch over to a stretchy constructions (made up of several glyphs stitched together). This is a very interesting problem to solve. And you know what? This touches on one of the hottest topics of CSS discussions in the past few years: it is a perfect use case for &lt;a href=&quot;https://github.com/WICG/container-queries/&quot;&gt;container queries&lt;/a&gt;. Go add a use case and push the web forward for everyone!&lt;/p&gt;
&lt;p&gt;But perhaps current CSS is sufficient and someone will find a clever approach to achieve a similar effect. As I mentioned above, percentages in border radius have a neat effect; there is a lot of room to play with once you stop thinking about everything in terms of print traditions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It&#39;s not semantic!&lt;/strong&gt; Gosh. What exactly does a (stretched) brace represent, semantically speaking? And, should you have decided to imbue it with such rich meaning yourself, are you really unable to expose the relevant information using the web platform&#39;s rich accessibility stack? No? Excellent - you should file a bug with ARIA and help push the web forward for everyone!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It can&#39;t look like font x!&lt;/strong&gt; Some fonts have a really tricky curly brace with basically an S shape in each half. I admit my CSS-foo is not good enough to do that. But besides the fact that a better designer might find a solution, I find the trade-off acceptable. And if there&#39;s a limitation in CSS, please file a bug with the CSS WG and help push the web forward for everyone!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It can&#39;t do delimiter y!&lt;/strong&gt; There are &lt;a href=&quot;https://en.wikipedia.org/wiki/Bracket#Encoding_in_digital_media&quot;&gt;quite a few brackets&lt;/a&gt;, some more complex than others (&lt;em&gt;Mathematical left white tortoise shell bracket&lt;/em&gt; anyone?) but few of those are used in stretchy ways and fewer still occur often (for comparison, the STIX-2 fonts support ~30 delimiters). I really don&#39;t have a problem with such edge cases remaining difficult for the time being if we can solve a practical problem for 99% of use cases. And if you do, ... you know what to do.&lt;/p&gt;
&lt;h2&gt;Moar fences!&lt;/h2&gt;
&lt;p&gt;So let&#39;s do two more, the most important ones:&lt;/p&gt;
&lt;p&gt;Parentheses,&lt;/p&gt;
&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;pLWRwx&quot; data-default-tab=&quot;result&quot; data-user=&quot;pkra&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Stretchy parenthesis&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/pkra/pen/pLWRwx/&quot;&gt;Stretchy parenthesis&lt;/a&gt; by Peter Krautzberger (&lt;a href=&quot;https://codepen.io/pkra&quot;&gt;@pkra&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;and square brackets&lt;/p&gt;
&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;bvYBje&quot; data-default-tab=&quot;result&quot; data-user=&quot;pkra&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Stretchy brackets&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/pkra/pen/bvYBje/&quot;&gt;Stretchy brackets&lt;/a&gt; by Peter Krautzberger (&lt;a href=&quot;https://codepen.io/pkra&quot;&gt;@pkra&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;See now, that wasn&#39;t so hard?&lt;/p&gt;
&lt;h2&gt;Coda&lt;/h2&gt;
&lt;p&gt;I suspect that if we work a bit harder to unstuck ourselves from the traditions of (print) equation layout engines, then we might just find a lot of interesting solutions like this; solutions that help make equation layout on the web as easy as as designing a good page layout with CSS; solutions that work &lt;em&gt;with&lt;/em&gt; the grain of the web; solutions that perhaps even lack but help identify (and resolve) shortcomings in the web platform that affect a much wider community; solutions that help move the web forward.&lt;/p&gt;
&lt;p&gt;PS: I&#39;ve started &lt;a href=&quot;https://codepen.io/collection/njBkMa/&quot;&gt;a little collection on codepen&lt;/a&gt;. Ping me if you see something that might fit!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Experimenting with fractions for the web</title>
		<link href="https://www.peterkrautzberger.org/0205/"/>
		<updated>2018-05-28T22:00:00+02:00</updated>
		<id>https://www.peterkrautzberger.org/0205/</id>
		<content type="html">&lt;p&gt;I just got back from a week in San Jose at the &lt;a href=&quot;https://aimath.org/workshops/upcoming/webmath/&quot;&gt;AIM workshop on web accessibility of mathematics&lt;/a&gt;. It was an intense week for me and there&#39;s a ton to write about.&lt;/p&gt;
&lt;p&gt;This morning I came back to something I had drafted after Joanmarie Diggs proposed a session on a particular hack (but the group didn&#39;t end up focusing on this in the unconference-style workshop setting).&lt;/p&gt;
&lt;h2&gt;That&#39;s not a fraction. &lt;em&gt;That&#39;s&lt;/em&gt; a fraction!&lt;/h2&gt;
&lt;p&gt;One of my &lt;a href=&quot;https://www.peterkrautzberger.org/0205/0199/&quot;&gt;go&lt;/a&gt;-&lt;a href=&quot;https://www.peterkrautzberger.org/0205/0196/&quot;&gt;to&lt;/a&gt; &lt;a href=&quot;https://www.peterkrautzberger.org/0205/0192/&quot;&gt;examples&lt;/a&gt; when explaining that Presentation MathML is devoid of semantics is the &lt;code&gt;&amp;lt;mfrac&amp;gt;&lt;/code&gt; element. While it clearly hints at being a fraction, the spec itself &lt;a href=&quot;https://www.w3.org/TR/2014/REC-MathML3-20140410/chapter3.html#presm.mfrac&quot;&gt;clearly states&lt;/a&gt; that it is not, semantically, a fraction but that it may be used for completely different things that visually look like fractions, e.g., binomial coefficients or the Legendre symbol; in fact, you can find many even less fraction-like examples (such as logical deductions) in the wild because a vertical stack with a properly aligned line is simply a neat layout feature.&lt;/p&gt;
&lt;p&gt;Since Presentation MathML never specifies semantics, let&#39;s look how Content MathML encodes fractions. The &lt;a href=&quot;https://www.w3.org/TR/2014/REC-MathML3-20140410/chapter4.html#contm.cn&quot;&gt;spec&lt;/a&gt; would have you write something like &lt;code&gt;&amp;lt;cn type=&amp;quot;rational&amp;quot;&amp;gt;22&amp;lt;sep/&amp;gt;7&amp;lt;/cn&amp;gt;&lt;/code&gt;. It&#39;s a terribly good example for how Content MathML is a bit too strong in its abstraction for human communication (also, check the transcription to Presentation MathML). As an aside, if you need more examples of why &lt;code&gt;&amp;lt;mfrac&amp;gt;&lt;/code&gt; is not meaningful, just search that section.&lt;/p&gt;
&lt;h2&gt;Hacking tips for accessibility experiments&lt;/h2&gt;
&lt;p&gt;Anyway, at the workshop Joanie had proposed the following. It turns out, Firefox is &lt;s&gt;too lazy&lt;/s&gt; &lt;em&gt;ahem&lt;/em&gt; too performance-oriented to sanitize invalid ARIA roles. This allows you to experiment with made-up properties fairly easily (assuming you can modify your screenreader of choice).&lt;/p&gt;
&lt;p&gt;So for example, you could slap an &lt;code&gt;aria-math&lt;/code&gt; attribute to your markup and this would show up in OS-level accessibility inspectors such as &lt;a href=&quot;https://developer.paciellogroup.com/resources/aviewer/&quot;&gt;aViewer&lt;/a&gt; or &lt;a href=&quot;https://help.gnome.org/users/accerciser/stable/introduction.html.en&quot;&gt;accerciser&lt;/a&gt;. What Joanie had in mind (I believe) is that we could have tried to expose additional information this way so that Joanie could hack something into &lt;a href=&quot;https://help.gnome.org/users/orca/stable/index.html.en&quot;&gt;ORCA&lt;/a&gt; and then get Mick and Reef to modify &lt;a href=&quot;https://www.nvaccess.org/&quot;&gt;NVDA&lt;/a&gt; or David to modify &lt;a href=&quot;http://www.chromevox.com/&quot;&gt;ChromeVox&lt;/a&gt; (and maybe even hear what Glen thinks of it from a JAWS perspective). And yes, all these incredible people were actually there in person.&lt;/p&gt;
&lt;h2&gt;To fractinity, and beyond!&lt;/h2&gt;
&lt;p&gt;Since an idea that I had proposed to the group (exploring web components for mathematical documents) also didn&#39;t stick, I thought I&#39;d combine the two when I get the chance. Luckily, I had a long flight home.&lt;/p&gt;
&lt;p&gt;&lt;span lang=&quot;fr&quot;&gt;Et voilÃ &lt;/span&gt;, a custom element fraction that adds &lt;code&gt;aria-math&lt;/code&gt; roles to itself magically (using &lt;code&gt;fraction&lt;/code&gt;, &lt;code&gt;numerator&lt;/code&gt;, &lt;code&gt;denominator&lt;/code&gt; and&lt;code&gt;fraction-line&lt;/code&gt;).&lt;/p&gt;
&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;MGdmQj&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;pkra&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;AIM Workshop custom element: fraction&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/pkra/pen/MGdmQj/&quot;&gt;AIM Workshop custom element: fraction&lt;/a&gt; by Peter Krautzberger (&lt;a href=&quot;https://codepen.io/pkra&quot;&gt;@pkra&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;It&#39;s not much and not really a &amp;quot;document&amp;quot;-level element as I was thinking about (then again, Joanie had hoped for improving an &lt;code&gt;&amp;lt;mfrac&amp;gt;&lt;/code&gt; directly) but it&#39;s a nice (non-functional) concept, and perhaps helpful when thinking about ARIA &lt;code&gt;role-description&lt;/code&gt;.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Booles&#39; Rings is dead, long live Booles&#39; Rings!</title>
		<link href="https://www.peterkrautzberger.org/0206/"/>
		<updated>2018-05-30T22:00:00+02:00</updated>
		<id>https://www.peterkrautzberger.org/0206/</id>
		<content type="html">&lt;p&gt;Yesterday, &lt;a href=&quot;http://scoskey.org/&quot;&gt;Sam&lt;/a&gt; and I removed all remaining WordPress installations that we were hosting for people that are part of &lt;a href=&quot;https://boolesrings.org/&quot;&gt;Booles&#39; Rings&lt;/a&gt;, including the original multisite installations that &lt;a href=&quot;https://www.peterkrautzberger.org/0069/&quot;&gt;started it all&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Booles&#39; Rings is dead&lt;/h2&gt;
&lt;p&gt;My regular meetings with Sam are one of my great pleasures. Since our friendship is almost exclusively virtual, it&#39;s surprising that we have kept it alive for quite a while now. Almost weekly, we get on video to work on new ideas or and projects - or just chitchat about life, work and being young parents (or parents of young kids anyway).&lt;/p&gt;
&lt;p&gt;Perhaps unsurprisingly given that we met at a &lt;a href=&quot;https://www.peterkrautzberger.org/0054/&quot;&gt;Young Set Theory Workshop&lt;/a&gt;, it all started with us setting up Set Theory Talks which grew turned into &lt;a href=&quot;http://settheory.mathtalks.org/&quot;&gt;settheory.mathtalks.org&lt;/a&gt; (and you can get a subdomain with the same semi-automatic features if you like). Nowadays, &lt;a href=&quot;http://blog.assafrinot.com/&quot;&gt;Assaf&lt;/a&gt; is handling the real work of grooming the site while Sam and I continue the little bits of technical support as needed. Later, I pulled Sam into maintaining &lt;a href=&quot;https://mathblogging.org/&quot;&gt;mathblogging.org&lt;/a&gt; with me after Fred and Felix dropped out.&lt;/p&gt;
&lt;p&gt;I suppose it was inevitable ever since I left research 6 years ago.  But, really, life just got busier and hosting more complex so late last year, Sam and I decided that we do not have the time (nor the abilities) to continue hosting more and more sites. We let everyone know what&#39;s happening and helped them in their transitions.&lt;/p&gt;
&lt;p&gt;Yesterday, we pulled the plug on all the WordPress goodness we had built over the years. And thus, Booles&#39; Rings has passed - in its original form, a literal network of WordPress sites for academics.&lt;/p&gt;
&lt;h2&gt;Long live Booles&#39; Ring!&lt;/h2&gt;
&lt;p&gt;Of course, none of the sites have disappeared. In many ways we&#39;re now where I wanted to get everyone to: not just researchers taking the web seriously as a fixed point of a research career, building a stable presence of one&#39;s research persona, overcoming the cacophony of ever-changing, dead-or-dying department pages where Google page rank inevitably yields the outdated ones.&lt;/p&gt;
&lt;p&gt;No, I always wanted more: get researchers to take this platform seriously, embrace it as a medium with new (and old) idiosyncrasies. Take it seriously as a tool that you should wield confidently and, in need, wield independently, no matter what. No more lock in.&lt;/p&gt;
&lt;p&gt;And this is where Booles&#39; Rings is now. The people are still here, the site now merely works as lightweight connection (and an aggregator). And no matter how we all approach this medium, it&#39;s fine. Whether it&#39;s self-hosted WordPress installations or statically generated sites, whether slow-churning long form or near-daily activity, whether research-only or life&#39;s breadth. The point is not that one thing is better than the other. The point is that we are on the web, our shared and world wide web - and that we&#39;re here to stay.&lt;/p&gt;
&lt;p&gt;Even though I left research years ago, I still love to follow this community. I look forward to the next 7 years of Booles&#39; Rings.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>6 Thoughts on accessibility of equation layout</title>
		<link href="https://www.peterkrautzberger.org/0207/"/>
		<updated>2018-10-27T22:00:00+02:00</updated>
		<id>https://www.peterkrautzberger.org/0207/</id>
		<content type="html">&lt;p&gt;&lt;q&gt;Of course it is more complicated than that.&lt;/q&gt;&lt;/p&gt;
&lt;p&gt;Isn&#39;t it always?&lt;/p&gt;
&lt;p&gt;&lt;button onclick=&quot;document.body.innerHTML = body.innerHTML.replace(/equation/g,&#39;formula&#39;);&quot;&gt;Replace &lt;em&gt;equation&lt;/em&gt; with &lt;em&gt;formula&lt;/em&gt;&lt;/button&gt;, if you prefer.&lt;/p&gt;
&lt;h1&gt;The first rule of equation layout accessibility&lt;/h1&gt;
&lt;p&gt;Don&#39;t talk about &amp;quot;math accessibility&amp;quot; when you mean equation layout accessibility.&lt;/p&gt;
&lt;p&gt;Mathematics is an ancient domain of human knowledge, formula or equation layout a visual layout technique developed primarily in the 19th and 20th century.&lt;/p&gt;
&lt;p&gt;Mathematical content is far more than content that needs equation layout and equation layout appears in many more domains than just mathematics.&lt;/p&gt;
&lt;p&gt;We will fail to make equation layout accessible if we think we can treat equation layout identically across mathematics, physics, chemistry, computer science, biology etc (and their various sub-fields). For example, voicing a superscript 2 as &amp;quot;squared&amp;quot; may be a reasonable heuristic for middle school mathematics but a miserable heuristic for chemistry.&lt;/p&gt;
&lt;p&gt;We will fail to make mathematical content accessible if we only make equation layout accessible and vice versa.&lt;/p&gt;
&lt;h1&gt;2. Augmentation is a must (or: &lt;em&gt;aria-labels must work&lt;/em&gt;)&lt;/h1&gt;
&lt;p&gt;Manually overriding accessible name calculations (e.g., via aria-label) on text(-like) content is generally considered a last resort and it is clearly not a long term strategy for accessibility.&lt;/p&gt;
&lt;p&gt;But we have aria-labels because we know from experience that there&#39;s always a situation where you need them.&lt;/p&gt;
&lt;p&gt;Currently, it is extremely hard to augment equation layout with aria-labels let alone anything beyond simple overrides. This is a problem of authoring but much more of rendering and assistive technologies. MathML-based solutions in browsers and AT are particularly bad at this and to some degree this cannot be fixed (we should get to that later).&lt;/p&gt;
&lt;p&gt;Whatever solutions might arise in the future of equation layout, like everything else on the web, they must be able to work together with interspersed aria-labels, together with potentially many interspersed aria-labels, and ultimately with only aria-labels.&lt;/p&gt;
&lt;p&gt;In other words, &lt;em&gt;deep aria labels&lt;/em&gt; aka &lt;em&gt;aria labels all the way down&lt;/em&gt; must work as well.&lt;/p&gt;
&lt;p&gt;This is a problem as ARIA has limitations when it comes to exposing custom tree structures and making them explorable.&lt;/p&gt;
&lt;p&gt;More general author-driven augmentation must also work. Equation layout may have a natural tree structure derived from the DOM but we must be able to modify that. Aria-owns might be a solution here but right now it appears to too limited (either by spec or implementations).&lt;/p&gt;
&lt;h1&gt;3. Visual quality must come first (and that&#39;s a problem)&lt;/h1&gt;
&lt;p&gt;If equation layout is visually inadequate, it cannot be considered accessible. The problem is: we have no solid basis for measuring this.&lt;/p&gt;
&lt;p&gt;While TeX-style layout is generally considered the &lt;em&gt;highest quality&lt;/em&gt; among heavy users of equation layout, there seems to be no research evaluating this from an accessibility point of view. For example, TeX layout is largely unconcerned with K12 content and (as a print technology) has no concept for the kind of dynamic modifications we can realize on the web. While there are minor variations, e.g., elementary education preferring sans-serif fonts and requiring fonts with an open glyph for 4, it&#39;s unclear to me in how far these preferences are evidence-based (pointers very welcome); in any case, they are also deeply rooted in print and might be moot on the web, e.g., there might be better ways for get whatever effect such variations are supposed to achieve.&lt;/p&gt;
&lt;p&gt;On the web, it probably means that equation layout must be flexible enough to allow all kinds of (user or author enabled) customizations. Some obvious questions: What should happen when the line-height changes? The letter spacing? When a transform or animation is applied to a descendant? A color changes on something with a specific color? A font (style) changes on a mathvariant? These all might be useful for accessibility purposes (e.g., with visual impairments, learning disabilities). And there are likely many more things we cannot imagine yet.&lt;/p&gt;
&lt;p&gt;I think we greatly lack research as to what features in visual layout might be important for accessibility &lt;em&gt;on the web&lt;/em&gt;. Without such research, we have no adequate basis on which to discuss improvements to equation layout and the standards that enable it on the web.&lt;/p&gt;
&lt;h1&gt;4. Heuristics should be used at authoring time&lt;/h1&gt;
&lt;p&gt;Heuristics are important across the assistive technology chain to recover from bad input (content). However, heuristics should not be necessary with &lt;em&gt;good&lt;/em&gt; markup, e.g., markup that is ideal according to specs.&lt;/p&gt;
&lt;p&gt;Equation layout is tremendously ambiguous, primarily due to its history and the limitations of print technology. For example, it is near impossible to differentiate the typical vertical fraction layout from the various other notations that share a similar vertical stack (2-3 children, depending on a line in between).&lt;/p&gt;
&lt;p&gt;In other words, even high quality markup for equation layout requires heavy use of heuristics to guess the semantics.&lt;/p&gt;
&lt;p&gt;Heuristics for non-visual representation of equation layout have existed for a very long time (and before the web). Today, some assistive technologies integrate heuristics for equation layout when done as MathML markup.&lt;/p&gt;
&lt;p&gt;This is a problem because most of these heuristics are fairly bad. Heuristics for equation layout are largely of low quality at scale. It is unsurprising when (e.g.) Nemeth&#39;s math speak rules were invented for a person reading to another; such limitations could easily be overcome in that situations. At the scale of the web, it is much easier to run into edge cases where heuristics are too coarse or too fine grained. An almost universal limitation is the restrictions to individual fragments of equation layout, ignoring the context (both equational and otherwise).&lt;/p&gt;
&lt;p&gt;Relying on heuristics in AT for &lt;em&gt;good&lt;/em&gt; content poses a serious issue (hinted to earlier): heuristics interfere with augmentation. For example, the commonly used heuristic that every superscript 2 is voiced &lt;q&gt;square&lt;/q&gt;, then no override may be possible; even if it is, will an override override the phrasing (e.g., &lt;q&gt;to the power of two&lt;/q&gt;) or also consider the superscript position? Do you need two overrides to clarify? If a heuristic identifies (1+2+3) as a summation and provides summary information (e.g. &lt;q&gt;sum with three summands&lt;/q&gt;), what happens when an author augment one of the + signs (say, with &lt;code&gt;aria-label=&amp;quot;times&amp;quot;&lt;/code&gt;)?  We would need to augment both the content and the heuristics. As the saying goes: and now we have two problems.&lt;/p&gt;
&lt;p&gt;Much like with textual descriptions of other visual content (e.g., image alttext, video captions, SVG descriptions) heuristical tools (human or machine guided) should be used at authoring time.&lt;/p&gt;
&lt;h1&gt;5. Describing layout is a red herring&lt;/h1&gt;
&lt;p&gt;There is a position that I encounter every once in a while: just give non-visual users access to the visual layout and stop. That&#39;s a very appealing proposition: instead of trying to make sense of visual layout semantically, we &lt;em&gt;just&lt;/em&gt; provide information about what letter/word is where on a two-dimensional canvas. It also appeals to a basic idea of equality: visual users only have visual access, why would non-visual users get additional information?&lt;/p&gt;
&lt;p&gt;Unfortunately, it is a red herring: it is neither easy nor helpful nor what anyone has ever done.&lt;/p&gt;
&lt;p&gt;It is obviously not easy on the web because layout is dynamic; if two users read a document on two different devices, they might have a very different idea as to what is where. Even within equation layout, automatic linebreaking/reflow can shift parts around, more advanced methods (e.g., MathJax&#39;s collapsing feature) can vary even more greatly.&lt;/p&gt;
&lt;p&gt;But ignoring this larger problem, traditional equation layout has a few odd concepts that make this even more difficult. For example, movable limits can move elements from sub/superscript positions to under/overscript positions based on the context of a subexpression, without any change in the markup; reversely, this can happen when changing text content (thanks to things like the operator dictionary). Another example is the concept of embellished operators which make it difficult to identify reasonable layout blocks to describe; similarly, brackets may or may not be marked up in a way that groups open and closing brackets. Essentially, you will still need to analyze the layout &lt;em&gt;semantically&lt;/em&gt; to identify what really belongs where and together with what because that is ultimately a question of &lt;em&gt;why&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As a consequence, the idea of &lt;em&gt;just&lt;/em&gt; describing layout is not helpful to anyone, no matter what assistive technologies they might use (even if it&#39;s just a screen). Even more so, when you have to do the same analysis as you would for identifying semantics of an expression.&lt;/p&gt;
&lt;p&gt;What&#39;s more important is that describing layout is not what anyone has ever done (so I would surmise nobody wanted to do it). Some layout information is always ignored, other layout is always inferred as semantic. As way back as Nemeth&#39;s math speak rules for print we have had heuristics that will read any superscript 2 as &lt;em&gt;squared&lt;/em&gt;, inferring semantics where there are none. Reversely, no assistive technology for equation layout will tell you about the dimension of a stretchy character (neither directly nor transformatively e.g. via audio cues). Again, a good example is a movable limit where rule sets get around describing (unreliable) layout in favor of heuristically determined semantics, e.g., in a sum they might voice &lt;q&gt;sum from [subscript] to [superscript]&lt;/q&gt;, neatly avoiding the layout. Above all, human beings do not speak equation layout as layout. Nobody says &lt;q&gt;vertical bar A vertical bar&lt;/q&gt; they say absolute value or determinant or something completely different, nobody says &lt;q&gt;C O subscript 2&lt;/q&gt; they say CO2 or carbon dioxide or possibly some more precise wording if it appears inside a checmical equation.&lt;/p&gt;
&lt;p&gt;Of course, describing visual layout is nevertheless a decent fallback mechanism, e.g., when semantic heuristics fail but you can still recover layout information and it is important to be able to enable users to explore the layout if they need to (e.g., so as to reproduce it for their own work). But edge cases should not limit the expressiveness of accessible equation layout in general.&lt;/p&gt;
&lt;p&gt;(An independent issue is to expose layout so that a user can guess how something was authored (e.g., when voicing gives you &lt;q&gt;determinant A&lt;/q&gt;, the questions may be if it was represented  visually as &lt;code&gt;det A&lt;/code&gt; or &lt;code&gt;|A|&lt;/code&gt;.)&lt;/p&gt;
&lt;h1&gt;6. We must strive for multi-directionality&lt;/h1&gt;
&lt;p&gt;Accessibility is not a one way street, equation layout even more so. Accessibility must handle directionality on many axes.&lt;/p&gt;
&lt;p&gt;Accessibility means to improve access to content no matter whether a user can access it with all theoretically possible human capacity or only using a small fragment thereof at a time. Due to its highly compressed form, equation layout requires more back and forth across a particular equation fragment as well as the entire document than most other forms of content. This is both a bug and a feature but either way it won&#39;t go away any time soon.&lt;/p&gt;
&lt;p&gt;Accessibility means to improve interaction with content so as to allow all users to transfer knowledge better. Equation layout has a huge discrepancy between authoring formats and rendering. We must strive to improve this.&lt;/p&gt;
&lt;p&gt;Acccessibility means improving the interaction between human beings. If two students explore a document, they should be able to do so together so that they can engage each other. Therefore, the effects of exploring content should be equivalent between different exploration methods. At the AIM workshop earlier this year, Sam Dooley told the story of a young blind person joyously celebrating that their parent could &lt;q&gt;read my math&lt;/q&gt; as they used an accessible authoring and rendering environment together.&lt;/p&gt;
&lt;p&gt;Interaction in these multiple directions will provide more information to more people, enabling wider accessibility, whether people identify as AT users or not. More importantly, it will show the path towards what the web can really do for the knowledge traditionally represented in equation layout.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Three interesting results from the AIM workshop</title>
		<link href="https://www.peterkrautzberger.org/0208/"/>
		<updated>2018-11-14T23:00:00+01:00</updated>
		<id>https://www.peterkrautzberger.org/0208/</id>
		<content type="html">&lt;p&gt;When I look back at &lt;a href=&quot;https://www.peterkrautzberger.org/0201/&quot;&gt;looking ahead to 2018&lt;/a&gt;, I&#39;m going to fall short of my goals for this year. Life was on full throttle this year; no regrets. But I want to at least acknowledge what an excellent adventure the &lt;a href=&quot;https://aimath.org/webmath&quot;&gt;AIM Workshop&lt;/a&gt; in May has been. So let&#39;s take a look at three interesting results.&lt;/p&gt;
&lt;h2&gt;The first rule of workshops&lt;/h2&gt;
&lt;p&gt;It&#39;s all in the people.&lt;/p&gt;
&lt;p&gt;Of course, the very best part of this workshop was the people who attended it. It&#39;s amazing to get people from NVDA, JAWS and ChromeVox into a room for a few days. It&#39;s even better when you have people from MathJax, MathLive, Desmos in the same room. It gets even better when you have publishing experts from Wiley and Pearson on board. It&#39;s incredibly much better to have the vast expertise of people such as T.V. Raman and Joanie Diggs there. But for me, the most thrilling was the educators in the room. They are the key and without them we are all lost. And I&#39;m the first to admit the workshop didn&#39;t serve them well enough. Even more importantly, at future workshops we need to get students in the room as well. Because what the hell are we doing without them.&lt;/p&gt;
&lt;p&gt;In extension, this is a compliment to AIM&#39;s workshop design. Providing funding not only for a workshop but for everyone&#39;s travel and accommodation was excellent but also crucial. We would never have been able to get all these people in a room. This is the right way to hold workshops, especially when inclusiveness is a huge issue.&lt;/p&gt;
&lt;h2&gt;Towards an optional Braille stream&lt;/h2&gt;
&lt;p&gt;There&#39;s a particular limitation of today&#39;s accessibility landscape: we cannot specify separate textual alternatives for voice and Braille.&lt;/p&gt;
&lt;p&gt;Generally, not having separate streams for voice and Braille does not seem like a huge problem. As long as all accessibility needs are covered by a fixed set of standard elements that are designed for both aural and tacticle interfaces, then assistive technologies can reliably implement a split in the stream, i.e., present separate voice and Braille streams from that. For example, if you have a dedicated button element, it can represented as a &lt;code&gt;btn&lt;/code&gt; contraction on a Braille display and voiced as &lt;em&gt;Button&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As usual, not all things can be covered by standards. Say your button is is used as a control in a game then you may want to augment the button&#39;s accessible name to include the action. So if the button opens a selection of planets to travel your to in your game, then you may want to have this voiced as &lt;em&gt;planet&lt;/em&gt;. You can do that of course and then you might get a voicing of &lt;em&gt;planet; button&lt;/em&gt; and something akin to &lt;code&gt;pln btn&lt;/code&gt; on a Braille display.&lt;/p&gt;
&lt;p&gt;Unfortunately, you might find yourself in a situation where you need to prevent the addition of &lt;em&gt;button&lt;/em&gt; in the voicing because it may be problematic for your aural users, e.g., users with learning disabilities may find it to be distracting noise. But now how do you identify the button on a Braille display?&lt;/p&gt;
&lt;p&gt;For equation layout, the situation is much like that final situation. In many countries, specialized Braille formats such as Nemeth, UEB, or Marburg have been developed to represent equation layout in Braille. These are well established and there are not too difficult to create. But they differ considerably from what you would might want to render aurally (and visually). In fact, since most precede the web, they try to capture (simplified) visual layout, including all the ambiguities we face there.&lt;/p&gt;
&lt;p&gt;For me, the greatest positive experience of the workshop was to see the group assess the problem, come to an agreement that it needs a solution, &lt;a href=&quot;https://github.com/w3c/aria/issues/765&quot;&gt;add it to the ARIA tracker&lt;/a&gt;, &lt;a href=&quot;https://sinabahram.github.io/aria-playground/CustomBrailleOutput.html&quot;&gt;build demos&lt;/a&gt; and even see NVDA whip up a first implementation that we could explore by the end of the week.&lt;/p&gt;
&lt;p&gt;This was &lt;strong&gt;huge&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;And yet, it is the easy part. Now the long road towards a proper standard with widespread implementations lies ahead.&lt;/p&gt;
&lt;h2&gt;Progress on deep aria labels&lt;/h2&gt;
&lt;p&gt;I brought my favorite problem to the workshop - &lt;a href=&quot;https://www.peterkrautzberger.org/0192/&quot;&gt;deep &lt;code&gt;aria-label&lt;/code&gt;s&lt;/a&gt; and I was not disappointed.&lt;/p&gt;
&lt;p&gt;Assistive technologies for equation layout (in particular for MathML) have to apply heuristics (read: guess) the semantics of an expression so that they can generate meaningful non-visual representations. This is a problem because heuristics that are hard coded into an external tool such as screenreaders cannot be altered by standard means, leaving authors without adequate means to ensure the quality of their content. (If a screenreader voices every superscripted 2 as &lt;em&gt;squared&lt;/em&gt; and you have no way of changing that, then you&#39;re screwed.)&lt;/p&gt;
&lt;p&gt;More importantly, since equation layout is, ultimately, only visual, a perfectly correct representation in HTML is as &lt;code&gt;span&lt;/code&gt;s, i.e., there are no semantics. Finally, ARIA (naturally) does not have a dictionary of equation layout terminology (let alone mathematical or scientific terminology) to use - a) because all past dictionary based approaches have failed and b) such a dictionary would have to be extensible (read: infinite) which ARIA, so far, does not really want to be (&lt;code&gt;role-description&lt;/code&gt; notwithstanding).&lt;/p&gt;
&lt;p&gt;So the pragmatic answer is: you&#39;ll just have to do it yourself and use deep &lt;code&gt;aria-label&lt;/code&gt;s: you override every single accessible name computation by slapping a fixed label to things. Because, ultimately, this is how we read equational content - with words.&lt;/p&gt;
&lt;p&gt;The trouble is that it&#39;s easy to add a single &lt;code&gt;aria-label&lt;/code&gt; at the root but it is hard to provide an explorable structure that provides a decent user experience. You&#39;ll want to provide labels at the leaf level but the state of ARIA prevents those from adequately building up an explorable tree. (And we&#39;re not even talking about refinements such as providing summaries and structural and positional information during exploration.)&lt;/p&gt;
&lt;p&gt;At the workshop, David Tseng from Google&#39;s ChromeVox team, Volker Sorge from Speech Rule Engine and Davide Cervone from MathJax sat down nd &lt;a href=&quot;https://github.com/zorkow/AIM-Workshop/tree/master/annotations&quot;&gt;build a first demo&lt;/a&gt; that tries two things&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;expose the semantic structure identified by Speech Rule Engine&#39;s heuristic using &lt;code&gt;aria-owns&lt;/code&gt; attribute&lt;/li&gt;
&lt;li&gt;expose (some of) the detailed speech information provided by SRE&lt;/li&gt;
&lt;li&gt;provide exploration of that tree via &lt;code&gt;aria-active-descendant&lt;/code&gt; manipulations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is, simply put, a fantastic step forward.&lt;/p&gt;
&lt;p&gt;The approach builds on existing parts of ARIA and identifies reasonable, incremental improvements to it. It raises important questions on general exploration, e.g., how is there a generic &lt;code&gt;aria-table&lt;/code&gt; walker in every screenreader but not some basic &lt;code&gt;aria-tree&lt;/code&gt; walker (such as breadth or depth first)?. And yet it pragmatically builds an unobtrusive solution anyway that works at 60FPS. It works with any markup, in particular any approach using CSS or SVG markup. And to top it off, it leverages existing open-source tool to enrich pre-existing content. And while it shows just how far ahead MathJax and Speech Rule Engine are, this approach is transparent and easily used by any other equation layout library.&lt;/p&gt;
&lt;p&gt;In terms of UX, this is also a critical step forward. The approach is should be able to provide a seamless an interaction for visual and non-visual users alike, in synchronization. Effectively, it pushes MathJax&#39;s Accessibility Extensions from client- to server-side, requiring minimal JavaScript (just a keyboard event listener) to expose the content, without live region hacks, and with a solid non-JS fallback. It provides a clear path for making even that bit of JS obsolete through natural improvements to ARIA. It opens a path to finally get rid of the horrible hackery such as JAWS did back in the day, manipulating IE&#39;s DOM to manipulate MathJax, or Texthelp is doing today by injecting JS on the client (yuck!, and also badly failing when content-security is in place).&lt;/p&gt;
&lt;p&gt;Even better, if you combine it with the previous part (exposing specialized Braille which SRE can soon produce), then this would immediately become the by far best, universal rendering of equation layout on the web: robust, high-quality, customizable, precise. And it is a solution that will only get better as standards evolve while leaving the full control with the author (with or without aid of heuristics at authoring time).&lt;/p&gt;
&lt;p&gt;I&#39;ll dig into this more some other time but admittedly, I&#39;m pretty excited.&lt;/p&gt;
&lt;h2&gt;Coda&lt;/h2&gt;
&lt;p&gt;You can find the &lt;a href=&quot;https://aimath.org/pastworkshops/webmath.html&quot;&gt;organizers&#39; report at aimath.org&lt;/a&gt; but you can take one thing away: It&#39;s looking very good for accessible equation layout on the web these days. And it will only get better.&lt;/p&gt;
&lt;p&gt;If we can continue these workshops, things will move faster for everyone. And maybe, just maybe, we can even finally move on to actual mathematics (and other STEM content) on the web.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Towards a general method for accessible content trees or: deep aria-labels for equations revisited</title>
		<link href="https://www.peterkrautzberger.org/0209/"/>
		<updated>2019-01-12T23:00:00+01:00</updated>
		<id>https://www.peterkrautzberger.org/0209/</id>
		<content type="html">&lt;p&gt;Oh dear, that title is a mouth full. A while ago I wrote about &lt;a href=&quot;https://www.peterkrautzberger.org/0208/&quot;&gt;two interesting results from the AIM workshop&lt;/a&gt; and I had promised to dive deeper. Well, take a deep breath.&lt;/p&gt;
&lt;h2&gt;A simple example&lt;/h2&gt;
&lt;p&gt;Here&#39;s a story. I think it was at the first web standard related event that I ever attended, the &lt;a href=&quot;https://www.w3.org/2012/08/electronic-books/&quot;&gt;W3C workshop on ebooks&lt;/a&gt; back in 2012. Someone (maybe Janina?) presented an example of an accessible SVG and I was blown away. My memory, flawed as it is, says it was the &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Ghostscript_Tiger.svg&quot;&gt;classic SVG tiger&lt;/a&gt; but it was set up in a way that demonstrated amazing exploration features, providing non-visual representations that could dive into the entirety of the graphic, starting with high-level descriptions (something like &lt;em&gt;a tiger&#39;s head&lt;/em&gt;) all the way down to detailed nuances (&lt;em&gt;left whisker, 3 of 12&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;I&#39;m prone ot get the specifics wrong so here&#39;s a different example:&lt;/p&gt;
&lt;figure&gt;
&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:House.svg#/media/File:House.svg&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/2/24/House.svg&quot; alt=&quot;clip art house&quot; width=&quot;389&quot; height=&quot;391&quot;&gt;&lt;/a&gt;
&lt;figcaption&gt;
By &lt;a rel=&quot;nofollow&quot; class=&quot;external text&quot; href=&quot;http://openclipart.org/media/people/barretr&quot;&gt;barretr&lt;/a&gt; (Open Clip Art Library) - &lt;a rel=&quot;nofollow&quot; class=&quot;external free&quot; href=&quot;http://openclipart.org/media/files/barretr/2941&quot;&gt;http://openclipart.org/media/files/barretr/2941&lt;/a&gt;, &lt;a href=&quot;http://creativecommons.org/publicdomain/zero/1.0/deed.en&quot; title=&quot;Creative Commons Zero, Public Domain Dedication&quot;&gt;CC0&lt;/a&gt;, &lt;a href=&quot;https://commons.wikimedia.org/w/index.php?curid=3454675&quot;&gt;Link&lt;/a&gt;&lt;p&gt;&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;So this is a house. How would you describe it? Maybe: &lt;em&gt;A house with a red chimney and a blue door&lt;/em&gt;? That&#39;s not bad but there&#39;s more so much more to be said about this house!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It&#39;s a drawing of the front of a house (no other part is visible)&lt;/li&gt;
&lt;li&gt;it has a dark gray, mono-pitched roof with a red chimney on the left&lt;/li&gt;
&lt;li&gt;it has a blue door with a round, dark-gray doorknob on the left&lt;/li&gt;
&lt;li&gt;it has a yellow front wall&lt;/li&gt;
&lt;li&gt;the chimney aligns with the wall&lt;/li&gt;
&lt;li&gt;some parts are drawn with gradient effects&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These descriptions could of course all be put into one very long textual representation, e.g., as a &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; or an &lt;code&gt;aria-labeledby&lt;/code&gt; construction. And that would be ok. But I find it rather limited.&lt;/p&gt;
&lt;p&gt;This is not how a human would describe things. Imagine I&#39;d ask you to describe it. You would not start with the gradient of the doorknob on the first go. I bet you are much more inclined to provide some information at first and get into more detail if whoever is asking wants to dive deeper.&lt;/p&gt;
&lt;p&gt;Sometimes, we are in the position to have more information like this on the web, too.&lt;/p&gt;
&lt;p&gt;Imagine, this house was created in an authoring environment that specializes on such drawings; it may have been drag&amp;amp;dropped using pre-fabricated components, each having detailed descriptions, integrating user changes such as shape or color modifications, and being able to generate composited descriptions, perhaps combining them using simple rule sets (maybe even author customizable rule sets).&lt;/p&gt;
&lt;p&gt;The other thing you may notice is that the house is more than the sum of its parts, i.e., a description for the house (and parts thereof) may not sufficiently be represented by stringing the descriptions of the leafs together; for example, where would the &lt;em&gt;with&lt;/em&gt; in &lt;em&gt;a roof with a chimney&lt;/em&gt; come from? For that matter, where would &lt;em&gt;house&lt;/em&gt; come from? Depending on the content and context, there may be additional connecting words or phrases, there may be details to drop or reveal. Maybe the fabric of the roof or the whether the door is locked can be deduced from visual styling given other context.&lt;/p&gt;
&lt;p&gt;If you are lucky and you have more information, then you may find yourself in a situation where you want to add differing textual representations on every level of the tree, just like you would in a real conversation, and you may want a way for users to have access to all those varying levels of representation - but not all at once as that could be overwhelming.&lt;/p&gt;
&lt;p&gt;The most important point: like all good web standards topics, this is about a general, low-level problem. (Although solving a more general problem might appeal to mathematicians, too.)&lt;/p&gt;
&lt;h2&gt;Deep aria labels on tree structures (or: it&#39;s not &lt;em&gt;just&lt;/em&gt; about equations)&lt;/h2&gt;
&lt;p&gt;So let&#39;s try to outline what this is about. Imagine you have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a complex DOM structure (e.g., an inline SVG, a complex grid structure, an equation layout thingie)&lt;/li&gt;
&lt;li&gt;which is not represented well by its leafs alone (e.g., there might be abstract components, abbreviated content, inferred meaning)&lt;/li&gt;
&lt;li&gt;that might have a semantic tree structure that does not match the DOM tree.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now imagine that you have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;appropriate textual representations for each node (e.g., aria-labels on all nodes)&lt;/li&gt;
&lt;li&gt;yet those textual representations may have notable differences between non-leafs and their descendants, i.e., a node may be more than the sum of its descendants (or less or both/neither).&lt;/li&gt;
&lt;li&gt;and you have proper aria-owns attributes all over the tree to represent the correct semantics&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;What to want&lt;/h3&gt;
&lt;p&gt;Let&#39;s start with some fairly standard observations on accessible rendering:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unified rendering&lt;/strong&gt; visual and non-visual rendering should not be apart. Textual representation should be intentional, reflect the intention of the author. (This does not contradict that both graphical and textual representation will likely be created with tools, even tools leveraging heuristics.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Progressive enhancement / graceful degradation&lt;/strong&gt; a solution should work in a way that allows to progressively enhance content. For example, a top-level textual description (e.g., using &lt;code&gt;aria-label&lt;/code&gt;) is a robust fallback. You may lose some convenience if that&#39;s all there is - and even some information - but it certainly isn&#39;t terrible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Performance&lt;/strong&gt; a solution must be performant, especially if you apply it to hundreds or thousands of content fragments.&lt;/p&gt;
&lt;p&gt;From an author&#39;s point of view, the key affordance is &lt;strong&gt;precision/control&lt;/strong&gt;. This is worth repeating: Accessibility inevitably starts with author control. If authors cannot create content in a way that they can trust to render reliably, i.e., with the precision they put into their content, then they will not care to do so.&lt;/p&gt;
&lt;p&gt;If there&#39;s no control, the platform is failing the authors. If it&#39;s failing the authors to create accessible content, then it&#39;s failing the user because they will not receive accessible content.&lt;/p&gt;
&lt;p&gt;This primarily means that content should be authorable in a way that does not require &lt;em&gt;any&lt;/em&gt; heuristics on the side of rendering (visually or non-visually). Imagine AT would have to guess how many items are in a list. Or AT would have to throw computer vision at each image to guess a description. That&#39;s ok for broken content but not acceptable for good content.&lt;/p&gt;
&lt;p&gt;There are other useful things of course - ease of authoring comes to mind. But without a solution with tangible benefits, building authoring tools or practices is never going to happen.&lt;/p&gt;
&lt;p&gt;From a screenreader user&#39;s point of view, there are more affordances that you probably don&#39;t want to ignore.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;support for reading/browse modes&lt;/li&gt;
&lt;li&gt;support for full exploration (in focus mode)&lt;/li&gt;
&lt;li&gt;seamlessly switch between exploration and reading/browse&lt;/li&gt;
&lt;li&gt;synchronization of all rendering streams
&lt;ul&gt;
&lt;li&gt;visual (highlighting), aural and tactile rendering&lt;/li&gt;
&lt;li&gt;enable customized Braille stream if specialized Braille formats exists&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many more considerations beyond this but this would be a good start.&lt;/p&gt;
&lt;h3&gt;Towards a solution: mathjax-sre-walker&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: this is not a complete solution to all of the above. But I feel like it&#39;s heading in the right direction.&lt;/p&gt;
&lt;p&gt;The codebase for this lighweight walker dubbed mathjax-sre-walker is on GitHub and for this first public summary we&#39;ve tagged &lt;a href=&quot;https://github.com/krautzource/mathjax-sre-walker/releases/tag/2.0.0&quot;&gt;v2.0.0&lt;/a&gt;. As I mentioned in &lt;a href=&quot;https://www.peterkrautzberger.org/0208&quot;&gt;208&lt;/a&gt;, this work with &lt;a href=&quot;https://www.peterkrautzberger.org/0209/www.progressiveaccess.com/&quot;&gt;Volker Sorge&lt;/a&gt; grew out of a demo that David Tseng, Volker Sorge and Davide Cervone built at the AIM workshop in San Jose last year. A simplified demo in a codepen is embedded below alongside a recording of a quick demonstration.&lt;/p&gt;
&lt;h3&gt;what users get&lt;/h3&gt;
&lt;p&gt;For the visual user, it will provide a means of visually exploring the underlying (and often hard to discern) tree structure by putting the tree in focus and using the arrow keys.&lt;/p&gt;
&lt;p&gt;For the non-visual user, it will additionally provide textual representations for each tree node, in sync with the visual representation. It doesn&#39;t but could (should we get separate &lt;a href=&quot;https://github.com/w3c/aria/issues/765&quot;&gt;Braille streams in ARIA&lt;/a&gt;) additionally provide a simultaneous rendering in specialized formats such as Nemeth or UEB, chemical Braille or others.&lt;/p&gt;
&lt;p&gt;For the screenreader user, it will provide the top-level tree node in browse mode. When the tree&#39;s top-level DOM node is voiced, the screenreader should put in focus, triggering visual highlighting; the screenreader should also indicate the tree role to imply further functionality is available.&lt;/p&gt;
&lt;p&gt;The user can switch to the screenreader&#39;s focus mode to use keyboard exploration with the arrow keys which is matched visually by the highlighting. When the user switches back to browse mode, they can continue naturally browsing to the next piece of content.&lt;/p&gt;
&lt;h3&gt;how users get it&lt;/h3&gt;
&lt;p&gt;The first, not too relevant part: the DOM tree has lots of information in &lt;code&gt;data-&lt;/code&gt; attributes and in a first step we enrich the content with a secondary structure. Getting such information is of course not easy (luckily we can already automate that for equations thanks to speech-rule-engine) and this step can be done server-side. Ultimately that&#39;s not the hardest part - domain experts can build such tools - we&#39;re using Volker&#39;s &lt;a href=&quot;https://github.com/zorkow/speech-rule-engine/&quot;&gt;speech-rule-engine&lt;/a&gt; for the equations (which is a marvel).&lt;/p&gt;
&lt;p&gt;Yet all the extra information won&#39;t help if we can&#39;t make use of it on the web platform.&lt;/p&gt;
&lt;p&gt;So how is this realized in the DOM tree? As a bunch of &lt;code&gt;aria-label&lt;/code&gt;s (to add textual representations) and &lt;code&gt;aria-owns&lt;/code&gt; to carve out the tree structure that might differ from the DOM tree; we also add a &lt;code&gt;role&lt;/code&gt; to most nodes. In particular, we immediately get a top-level &lt;code&gt;aria-label&lt;/code&gt; which serves as a fallback.&lt;/p&gt;
&lt;p&gt;Now what we&#39;re missing is some kind of AT functionality that would give us an &lt;code&gt;aria-owns&lt;/code&gt; tree walker. We have built-in table walkers in screen readers already so this does not seem like a massive stretch to imagine, especially given the evolution of the tree role so far. Sadly, we do not have general purpose tree walkers (yet).&lt;/p&gt;
&lt;p&gt;In the second part, we overcome this by adding such a walker in JS. This walker consists of a tree structure (the &lt;code&gt;aria-owns&lt;/code&gt; tree, generated from the embedded data for performance) and a keyboard listener. It is very close to the DOM&#39;s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Treewalker&quot;&gt;treewalker API&lt;/a&gt; and &lt;a href=&quot;https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView&quot;&gt;WCAG tree examples&lt;/a&gt;, except that we&#39;re working on the &lt;code&gt;aria-owns&lt;/code&gt; tree because that tree may have a different order/structure from the DOM. This walker is fairly minimal, probably ~100 lines of ES6 code if you strip it down to its minimum.&lt;/p&gt;
&lt;p&gt;Here&#39;s a demo of v2 or you can look at the &lt;a href=&quot;https://krautzource.github.io/mathjax-sre-walker/index.html&quot;&gt;one in the repository&lt;/a&gt;.&lt;/p&gt;
&lt;p data-height=&quot;896&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;EGOZxm&quot; data-default-tab=&quot;result&quot; data-user=&quot;pkra&quot; data-pen-title=&quot;mathjax-sre-walker v2 demo&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/pkra/pen/EGOZxm/&quot;&gt;mathjax-sre-walker v2 demo&lt;/a&gt; by Peter Krautzberger (&lt;a href=&quot;https://codepen.io/pkra&quot;&gt;@pkra&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io/&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://static.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
&lt;h3&gt;role role role your boat, gently down the stream&lt;/h3&gt;
&lt;p&gt;A side note on the chosen &lt;code&gt;role&lt;/code&gt; attributes. The tree role and its related roles may appear a good fit but they have been developed for specific application-like interfaces. It might be that it&#39;s smarter to use something different here, I honestly don&#39;t know.&lt;/p&gt;
&lt;p&gt;Besides possibly being the right roles, they are also supported well across the accessibility tool chain, i.e., they happen to get the effects we&#39;d like to see.&lt;/p&gt;
&lt;p&gt;What are those effects?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a top-level &lt;code&gt;aria-label&lt;/code&gt; to provide a default textual representation, especially in browse mode&lt;/li&gt;
&lt;li&gt;deeply nested &lt;code&gt;aria-labels&lt;/code&gt; with the role &lt;code&gt;treeitem&lt;/code&gt; provide detailed textual representation of all relevant nodes in exploration in focus mode&lt;/li&gt;
&lt;li&gt;browse mode puts element in focus on-the-go which makes for good UX: just drop out of browse mode when you hear an equation to start exploring&lt;/li&gt;
&lt;li&gt;switching back to browse mode continues smoothly&lt;/li&gt;
&lt;li&gt;&lt;code&gt;active-descendant&lt;/code&gt; is used to move the the focus on the accessibility tree&lt;/li&gt;
&lt;li&gt;thereby exposing the nested labels instead of the top-level node&#39;s label&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other roles have too many negative side effects in practice. Perhaps they shouldn&#39;t but it&#39;s often too hard to dissect if a problem comes from the ARIA specs, browser implementations, OS APIs, or screenreaders.  For example, some approaches didn&#39;t work well on MathJax SVG output but worked well on the clip art house; this is probably due to &lt;code&gt;use&lt;/code&gt; elements.&lt;/p&gt;
&lt;p&gt;Some other roles we&#39;ve tested across screenreaders:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;img&lt;/code&gt; (nested) prevents exploration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;application&lt;/code&gt; loses the top level label when using browse mode and it is difficult to get back to browse mode after exploration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;group&lt;/code&gt; is similar to application (except easier to get back into browse mode) but works poorly with CSS rendering&lt;/li&gt;
&lt;li&gt;&lt;code&gt;button&lt;/code&gt; and &lt;code&gt;math&lt;/code&gt; mostly work the same as &lt;code&gt;tree&lt;/code&gt; (very wrong, but hey)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Maybe those issues are fixable or maybe just due to my lack of understanding of specs and implementations. Of course, the mythical &lt;code&gt;role=static&lt;/code&gt; (&lt;code&gt;text&lt;/code&gt; etc.) might be very appropriate but, alas, it doesn&#39;t exist.&lt;/p&gt;
&lt;p&gt;Personally, I don&#39;t care which role I use. Whatever role works, I&#39;m happy to use it. Tree seems both adequate and semantically fitting, and they have a history of steady improvement.&lt;/p&gt;
&lt;h2&gt;In real life&lt;/h2&gt;
&lt;p&gt;Below is a recording with NVDA and Chrome on Windows 10.&lt;/p&gt;
&lt;div style=&quot;display: flex&quot;&gt;
&lt;iframe width=&quot;720&quot; height=&quot;748&quot; src=&quot;https://www.youtube.com/embed/LWho3euldjM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot; style=&quot;flex-grow: 1&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2&gt;Support&lt;/h2&gt;
&lt;p&gt;Overall, this works well on Firefox and Chrome while Edge and Safari generally don&#39;t get your more than the top-level label, i.e., the fallback; I haven&#39;t taken the time to compile for IE11 to test it.&lt;/p&gt;
&lt;p&gt;NVDA seems best so far, JAWS seems to have a problem tracking focus (it jumps away when getting back into browse mode / virtual cursor), and Orca &lt;s&gt;struggles with CSS rendering&lt;/s&gt; (see update below). VoiceOver with Safari is doing its thing (treating everything as a group) but VO works well with Chrome on MacOS. On iOS and Android we get the top-level labels (except VO with CSS rendering for some reason). The current code lacks touch input because (as far as I know) neither Talkback nor VoiceOver have a way to switch into (some form of) focus mode; it could be added, perhaps the visual exploration is interesting enough. I&#39;ll be publishing more demo runs as we move along.&lt;/p&gt;
&lt;p&gt;Overall, I&#39;m excited about the robustness at this stage and I plan to use this at work soon(ish). I also hope to bring the discussion around standardization of tree walkers to the ARIA Working Group - it seems to align with the evolution of tree widgets (e.g., for tab focus management, positional information) and a lot of content could benefit from some defaults in AT (much like with table walkers). But first we really need separate Braille streams.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;update 2019-01-24&lt;/strong&gt; Joanmarie Diggs was kind enough to look into the issues with CSS layout (commits &lt;a href=&quot;https://gitlab.gnome.org/GNOME/orca/commit/9357aa9cd82f43a853704b98464eb7a76352d4ed&quot;&gt;9357aa9c&lt;/a&gt; and &lt;a href=&quot;https://gitlab.gnome.org/GNOME/orca/commit/87d78dad097ce11a359e3bbebd77f5d32b2fccd6&quot;&gt;87d78dad&lt;/a&gt;) and Orca now matches NVDA beautifully.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Carnival of Math No. 173</title>
		<link href="https://www.peterkrautzberger.org/0210/"/>
		<updated>2019-09-11T22:00:00+02:00</updated>
		<id>https://www.peterkrautzberger.org/0210/</id>
		<content type="html">&lt;p&gt;This year I &lt;a href=&quot;https://www.peterkrautzberger.org/0194/&quot;&gt;once again&lt;/a&gt; have the pleasure to host the now &lt;strong&gt;173th Carnival of Mathematics&lt;/strong&gt;, the moveable feast of mathematical blogging shepherded by &lt;a href=&quot;http://aperiodical.com/carnival-of-mathematics/&quot;&gt;The Aperiodical&lt;/a&gt;, the best math blogging collective on this little blue ball in space. Be sure to &lt;a href=&quot;https://leeyieng.wordpress.com/2019/08/04/carnival-of-mathematics-172/&quot;&gt;visit the previous Carnival (No. 172) at Cassandra Lee Yieng&#39;s blog&lt;/a&gt; and keep an eye on &lt;a href=&quot;https://aperiodical.com/carnival-of-mathematics/&quot;&gt;all Carnivals&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As tradition will have it, we begin our show by taking a closer look at our number.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;173&lt;/strong&gt; is not just a prime, the sum of two squares of primes (2Â²+13Â²) &lt;em&gt;and&lt;/em&gt; the sum of three primes (53+59+61). No, it is also a &lt;a href=&quot;https://en.wikipedia.org/wiki/Balanced_prime&quot;&gt;balanced prime&lt;/a&gt; (same gap to previous and following prime) and the 13&lt;sup&gt;th&lt;/sup&gt;(!) &lt;a href=&quot;https://en.wikipedia.org/wiki/Sophie_Germain_prime&quot;&gt;Sopie Germain prime&lt;/a&gt; (since 2Ã173+1=347 is also prime).&lt;/p&gt;
&lt;figure&gt;
&lt;img width=&quot;256&quot; style=&quot;margin: 0 auto;&quot; alt=&quot;Sophie Germain&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/8/8b/Germain.jpeg&quot;&gt;
&lt;figcaption&gt;Portrait of &lt;a href=&quot;https://en.wikipedia.org/wiki/Sophie_Germain&quot;&gt;Sophie Germain&lt;/a&gt; (April 1, 1776 - June 27, 1831), &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Germain.jpeg&quot;&gt;[Public domain], via Wikimedia Commons&lt;/a&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Alas, 173 is also an &lt;a href=&quot;https://en.wikipedia.org/wiki/Odious_number&quot;&gt;odious number&lt;/a&gt;, which may sound rather bad but just means it has an odd number of 1&#39;s in binary (10101101).&lt;/p&gt;
&lt;p&gt;Now that you&#39;ve warmed up, let us once again enter the decidely wonderful, balanced madness of the mathematical blogging carnival.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Likely most people (or at least the most people) will already have seen the NYT&#39;s Kenneth Chang looking into &lt;a href=&quot;https://www.nytimes.com/2019/08/06/science/math-equation-pemdas.html&quot;&gt;Why Mathematicians hate that viral equation&lt;/a&gt;; but really who needs 8Ã·2(2+2) when you can so easily have drama with the Oxford Comma.&lt;/p&gt;
&lt;p&gt;In any case, make sure you head over to Over at the Art of Research where Vi Hart shared &lt;a href=&quot;https://theartofresearch.org/computation-for-hands-systems-for-humans/&quot;&gt;Computation for Hands, Systems for Humans&lt;/a&gt;, taking you on the magic carpet ride that&#39;s Vi&#39;s hands &amp;quot;craving computation&amp;quot;, combining hardware, software, systems thinking, VR and a ton of other ideas.&lt;/p&gt;
&lt;p&gt;Before you continue to Ari Rubinsztejn explains &lt;a href=&quot;https://gereshes.com/2019/05/27/why-tracking-space-debris-is-so-hard/&quot;&gt;Why Tracking Space Debris is so Hard&lt;/a&gt; (thanks, nonlinear dynamics!), step under the cover of the Undercover economist Tim Harford who wrote on &lt;a href=&quot;http://timharford.com/2019/08/the-strange-power-of-the-idea-of-average/&quot;&gt;the strange power of the idea of average&lt;/a&gt;, both good and bad.&lt;/p&gt;
&lt;p&gt;Of course any mathematically topic is worth a deep dive into, so head into the magical depths of the Math Vault for an extensive article on &lt;a href=&quot;https://mathvault.ca/long-division/&quot;&gt;Long Division and Its Variants (for Integers)&lt;/a&gt; Once you&#39;re ready, jump out and get yourself back into Cantor&#39;s Paradise where JÃ¸rgen Veisdal will let you in on &lt;a href=&quot;https://medium.com/cantors-paradise/the-mathematics-of-elo-ratings-b6bfc9ca1dba&quot;&gt;the mathematics of Elo ratings&lt;/a&gt;, a glimpse at the history of the famous ranking system.&lt;/p&gt;
&lt;p&gt;Before you lose your king or queen, let Richard Elwes ask you a question befit Carol&#39;s Red Queen: &lt;a href=&quot;https://richardelwes.co.uk/2019/09/06/how-many-sides-does-a-circle-have/&quot;&gt;How Many Sides Does A Circle Have?&lt;/a&gt; and be sure to follow him off on a tanget or two. If all those tangents twirled you around too much, switch to a classical, sold blog post by the amazing John Cook who will help you &lt;a href=&quot;https://www.johndcook.com/blog/2019/08/27/heaps-law/&quot;&gt;estimate vocabulary size with Heapsâ law&lt;/a&gt; just in case you need to verify a post-humously discovered manuscript by Jane Austen.&lt;/p&gt;
&lt;p&gt;To ease your way out of those particular mazes, take a sip and mingle over at &lt;a href=&quot;https://ima.org.uk/12133/editorial-august-2019/&quot;&gt;this month&#39;s IMA editorial&lt;/a&gt;, if only to catch up on the Queenâs Birthday Honours List for 2019. And if you are one of those people who frequent the always dramatic birdsite, here are a two math-focused threads for you:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Oh no, I&amp;#39;ve deliberately obscured large portions of this ruler and I need to make sure these vegetables are whole numbers of inches long or my toddler will eat me instead: a &lt;a href=&quot;https://twitter.com/hashtag/RealWorldMaths?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#RealWorldMaths&lt;/a&gt; thread &lt;a href=&quot;https://t.co/GWuZMry6Ti&quot;&gt;pic.twitter.com/GWuZMry6Ti&lt;/a&gt;&lt;/p&gt;&amp;mdash; Christian Lawson-Perfect (@christianp) &lt;a href=&quot;https://twitter.com/christianp/status/1169651584416079872?ref_src=twsrc%5Etfw&quot;&gt;September 5, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Unpopular take: As someone with a Master&amp;#39;s degree in statistics and who teaches data science, I&amp;#39;m very much over the &amp;quot;data scientists are incompetent fools who just throw data in and get results from a computer with no critical thinking&amp;quot; takes. 1/&lt;/p&gt;&amp;mdash; Matt Brems (@matthewbrems) &lt;a href=&quot;https://twitter.com/matthewbrems/status/1163224585644511233?ref_src=twsrc%5Etfw&quot;&gt;August 18, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/mathyawp/status/1162462128441139201?s=19&quot;&gt;Also via twitter&lt;/a&gt;, Francis Su shared his handout with &lt;a href=&quot;https://www.math.hmc.edu/~su/math131/good-math-writing.pdf&quot;&gt;Guildelines for good mathematical writing (PDF)&lt;/a&gt; which he says you should feel free to share with your students.&lt;/p&gt;
&lt;p&gt;To wrap things up, take a carousel of math blogging perfection at Math Off The Grid where Benjamin Leis&#39;s post on &lt;a href=&quot;https://blog.mathoffthegrid.com/2019/08/cardanos-method.html&quot;&gt;Cardano&#39;s Method&lt;/a&gt; starts from a new video from Mathologer (below), picks up &lt;a href=&quot;https://twitter.com/MrHonner/status/1165417359764533248?ref_src=twsrc%5Etfw&quot;&gt;a tweet by Patrick Honner&lt;/a&gt; throws in &lt;a href=&quot;https://artofproblemsolving.com/news/aftermath/aftermath-running-a-school-for-math-lovers-with-sam-vandervelde&quot;&gt;a podcast with Sam Vandervelde&lt;/a&gt; and tops it off with a pointer to &lt;a href=&quot;https://en.wikipedia.org/wiki/Marden%27s_theorem&quot;&gt;Marden&#39;s Theorem&lt;/a&gt; to drag you into the carnival that is Wikipedia&#39;s mathematics articles.&lt;/p&gt;
&lt;style&gt;.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }&lt;/style&gt;&lt;div class=&quot;embed-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/QILiHiTD3uc&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;Thatâs it for the beautiful month of September. Thanks to everyone who submitted a post! After almost 9 years of running&lt;/p&gt;
&lt;p&gt;Be sure to stop by next monthâs Carnival. You should &lt;a href=&quot;http://aperiodical.com/carnival-of-mathematics/&quot;&gt;submit your favorite blog posts/videos/content&lt;/a&gt; from the month of September. If youâd like to host an upcoming show, please get in touch with &lt;a href=&quot;mailto:katie@aperiodical.com&quot;&gt;Katie&lt;/a&gt;.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Weeknote 2019/37</title>
		<link href="https://www.peterkrautzberger.org/0211/"/>
		<updated>2019-09-13T22:00:00+02:00</updated>
		<id>https://www.peterkrautzberger.org/0211/</id>
		<content type="html">&lt;p&gt;I&#39;ve fallen silent this year. There were a lot of reasons for that. Mostly bad things, but many good things, too. I want to try to find a way back to writing, especially given this blog&#39;s 10&lt;sup&gt;th&lt;/sup&gt; anniversary coming up in December. I&#39;ve never been very personal on this personal site of mine; or perhaps more precisely I may not have appeared to be so, that is, I&#39;ve not been writing the stuff most people think of when they say &amp;quot;personal website&amp;quot;. I&#39;m thinking maybe I&#39;ll give it a try.&lt;/p&gt;
&lt;p&gt;Anyway. I really like this idea of a weeknote which I first saw at &lt;a href=&quot;https://daverupert.com/&quot;&gt;Dave Rupert&#39;s&lt;/a&gt; and then at &lt;a href=&quot;https://www.baldurbjarnason.com/&quot;&gt;Baldur Bjarnason&#39;s&lt;/a&gt;. Let&#39;s give it a try and see how it feels.&lt;/p&gt;
&lt;h2&gt;Work&lt;/h2&gt;
&lt;p&gt;Work has been mixed this week. A big chunk of in-depth work was finalizing (what feels like a countless number of) tests for a very old piece of code that never had any tests. As this code had grown into a little bit of a monster, I now feel much more in control of it and ready to rewrite/port it. I also got into the GitHub Actions beta this week which looks nice and should help automate a bunch of stuff that&#39;s being done by a much less natural GitHub app (client permitting, anyway).&lt;/p&gt;
&lt;p&gt;Oh, and I had some interesting work helping some (print) designers wrap their heads around some web thing. That was a ton of fun and maybe it will turn into more, we&#39;ll see.&lt;/p&gt;
&lt;h2&gt;Reading&lt;/h2&gt;
&lt;p&gt;I&#39;ve been having a fit of escapism and churning through Harry Dresden novels at a high pace; as re-readings go, these are still quite good. I still don&#39;t like some things but I do still like how he grew the universe, something so many fantasy series fail at. This year really has been a year of re-reading incidentally; there are worse things.&lt;/p&gt;
&lt;h2&gt;Life&lt;/h2&gt;
&lt;p&gt;I had the yearly meeting of our daycare (which is set up as an association run by the parents). I&#39;m the data privacy person for another year which has really been quite interesting (thanks, GDPR); after focusing on the digital side (where I&#39;m more comfortable), it&#39;s time to focus on the physical side, where I look forward to learning a few new things. Otherwise, I was amazed how little drama we had; in the end, we seem to be good people, wanting to make things better.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://scoskey.org/&quot;&gt;Sam&lt;/a&gt; and I are back to regular meetings after a long summer which is just plain good. Besides good times, we are working on upgrades to &lt;a href=&quot;http://mathblogging.org/&quot;&gt;mathblogging.org&lt;/a&gt; and &lt;a href=&quot;http://boolesrings.org/&quot;&gt;boolesrings.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also think it may be time to finally fix my laptop&#39;s keyboard. First the left ctrl key went (which was fun to relearn with the right ctrl key), then the tick and some numbers started to become iffy (which gets annoying) but with the letter E starting to act up I&#39;m really coming to the end of the line. I don&#39;t know why I keep dragging it out. Let&#39;s see if I have an update in the next note, shall we?&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Weeknote 2019/38</title>
		<link href="https://www.peterkrautzberger.org/0212/"/>
		<updated>2019-09-20T22:00:00+02:00</updated>
		<id>https://www.peterkrautzberger.org/0212/</id>
		<content type="html">&lt;p&gt;Let&#39;s see if I can &lt;a href=&quot;https://www.peterkrautzberger.org/0211&quot;&gt;keep this up&lt;/a&gt;. I have a feeling these posts could be a collection of all the small bits and pieces that do not warrant a blog post.&lt;/p&gt;
&lt;h2&gt;Work&lt;/h2&gt;
&lt;p&gt;Work was full of organizational stuff - everything from reorganizing git repos to organizing people to organizing reporting data. So in many ways uneventful but for me usually a form of complementary exercise which gives me a productivity boost once all the end-of-quarter shenanigans are over.&lt;/p&gt;
&lt;h2&gt;Media&lt;/h2&gt;
&lt;p&gt;I&#39;ve been thinking about my media usage recently, in particular the role of podcasts and video hosting platforms (ok, mostly youtube at the moment).&lt;/p&gt;
&lt;p&gt;For the past two decades, the internet gradually eliminated any need (of mine) for TV consumption. Besides the obvious (there&#39;s a ton of media with a single subscription to a streaming service, a ton more with multiple subscriptions, and virtually all media in gray areas), I was pondering &amp;quot;TV programming&amp;quot; recently. It&#39;s something that many friends still describe as pleasing (switch on the TV and just watch something) and I would usually argue against it which seems odd since I was fairly addicted to it as a kid/ya. But recently I noticed how similar subscriptions to YouTube channels work. This is especially impressive with more original work such as &lt;a href=&quot;https://de.wikipedia.org/wiki/Druck_(Webserie)&quot;&gt;Druck&lt;/a&gt;, the German version of &lt;a href=&quot;https://de.wikipedia.org/wiki/Skam_(Fernsehserie)&quot;&gt;Skam&lt;/a&gt;, which timestamps its episodes and releases them on matching times of day. Reading about their approach (and watching a season, which was quite interesting in itself and as a parent) made me realize how I use my YouTube subscriptions like TV programming. It&#39;s ephemeral, passing me by, tuning in, maybe hopping to the next one. And yet it&#39;s way better than even tivo-era TV as it gives both the ephemeral and the archival.&lt;/p&gt;
&lt;p&gt;Similarly, podcasts (and again to some degree YouTube) have done much of the same for my radio consumption. Serious news stations like Deutschlandfunk, BBC 4, and various forms of NPR have been in my life since forever, and yet their consumption has been reduced to morning news and otherwise podcasts. In addition, podcasting covers anything from web industry to fiction, from comedy to whatever &lt;a href=&quot;https://blog.richter.fm/category/podcast/derweisheit&quot;&gt;Der Weisheit&lt;/a&gt; is (basically 4 friends chatting). I struggled to find interesting music podcasts (as in: playing contemporary popular music) for a while but I eventually found a few I liked; YouTube music channels do the rest.&lt;/p&gt;
&lt;p&gt;Anyhoo, just a reminder that this internet is wonderful, I guess.&lt;/p&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;p&gt;I thought one way to use this format might be to just browse through Mastodon and see what I find (boosted or, gasp, original content). So here we go.&lt;/p&gt;
&lt;p&gt;Christian posted lovely 3D printable Láµ norm balls thing:&lt;/p&gt;
&lt;iframe src=&quot;https://mathstodon.xyz/@christianp/102807944228401858/embed&quot; class=&quot;mastodon-embed&quot; style=&quot;max-width: 100%; border: 0&quot; width=&quot;400&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&lt;/iframe&gt;
&lt;iframe src=&quot;https://mathstodon.xyz/@christianp/102807949209412600/embed&quot; class=&quot;mastodon-embed&quot; style=&quot;max-width: 100%; border: 0&quot; width=&quot;400&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;David Eppstein linked to a glorious collection of Turing Complete things.&lt;/p&gt;
&lt;iframe src=&quot;https://mathstodon.xyz/@11011110/102789724968251958/embed&quot; class=&quot;mastodon-embed&quot; style=&quot;max-width: 100%; border: 0&quot; width=&quot;400&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&lt;/iframe&gt;
&lt;script src=&quot;https://mathstodon.xyz/embed.js&quot; async=&quot;async&quot;&gt;&lt;/script&gt;
&lt;h2&gt;Life&lt;/h2&gt;
&lt;p&gt;We finally went to &lt;a href=&quot;https://fridaysforfuture.de/allefuersklima/&quot;&gt;fridays for future&lt;/a&gt; this week; the fucking least we can all do is to show up whenever we can and always support them.&lt;/p&gt;
&lt;p&gt;Oh, my keyboard; I wanted to get onto that, didn&#39;t I.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Using grid to split a table cell</title>
		<link href="https://www.peterkrautzberger.org/0213/"/>
		<updated>2019-12-30T23:00:00+01:00</updated>
		<id>https://www.peterkrautzberger.org/0213/</id>
		<content type="html">&lt;p&gt;Well that kind of a break sucked.&lt;/p&gt;
&lt;p&gt;The other day I got to think about a little problem: split table cells.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.peterkrautzberger.org/assets/2019/splitcell.png&quot; alt=&quot;a table with first cell containing column and header information, separated by a diagonal line&quot;&gt;
&lt;figcaption&gt;Source &lt;a href=&quot;https://tex.stackexchange.com/q/89745&quot;&gt;tex.SE&lt;/a&gt;, CC-by-SA 4.0 &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If you search around the web for CSS solutions,&lt;br&gt;
you&#39;ll mostly find more or less fiddly ones: &lt;a href=&quot;https://stackoverflow.com/questions/45506550/how-can-a-split-diagonally-a-table-header-cell&quot;&gt;this one from StackOverflow&lt;/a&gt; hacks a border by transforming it - awesome hackery. I also liked &lt;a href=&quot;https://en.wikipedia.org/wiki/Template:Diagonal_split_header&quot;&gt;Wikipedia&#39;s solution&lt;/a&gt;, which takes a standard strike-through using gradients and automatically calculates the specific values for margins to keep the &amp;quot;sub cells&amp;quot; from the diagonal.&lt;/p&gt;
&lt;p&gt;But I was thinking that we should be able to do better these days. Shouldn&#39;t we get to stop worrying about the dimensions of the content?&lt;/p&gt;
&lt;p&gt;Grid to the rescue.&lt;/p&gt;
&lt;style style=&quot;display: block; white-space: pre-wrap; margin-bottom: 1em;&quot;&gt;
.cell {
  display: grid;
  width: max-content;
  justify-content: space-between;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: 1fr;
  border: 1px solid #000;
  background: url(&quot;data:image/svg+xml;utf8,&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; version=&#39;1.1&#39; preserveAspectRatio=&#39;none&#39; viewBox=&#39;0 0 100 100&#39;&gt;&lt;line x1=&#39;0&#39; y1=&#39;0&#39; x2=&#39;100&#39; y2=&#39;100&#39; stroke=&#39;black&#39; vector-effect=&#39;non-scaling-stroke&#39;/&gt;&lt;/svg&gt;&quot;);
  background-size: 100% 100%;
  margin-bottom: 1rem;
}

.cell--topRight {
  grid-column-start: 2;
  text-align: right;
}

.cell--bottomLeft {
  grid-column-start: 1;
}
&lt;/style&gt;
&lt;div class=&quot;cell diag&quot; contenteditable=&quot;true&quot;&gt;
    &lt;div class=&quot;cell--topRight&quot;&gt;Top and Right&lt;/div&gt;
    &lt;div class=&quot;cell--bottomLeft&quot;&gt;Bottom and Left&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A simple 2x2 grid an inlined background SVG to draw the diagonal; column placement creates faux cells alongside auto-rows at 1fr ensure we don&#39;t cross the line. In other words, an (almost) content-agnostic split table cell.&lt;/p&gt;
&lt;p&gt;You can go ahead and edit the text to try it out. See if you can find some edge cases where it fails (and let me know if you find a real case).&lt;/p&gt;
&lt;p&gt;And in real life don&#39;t forget to add some non-visual hints to clarify which part is which, especially in a table head.&lt;/p&gt;
&lt;p&gt;Happy New Year.&lt;/p&gt;
</content>
	</entry>
</feed>
